let ollama;_6d2‍.x([["llmSend",()=>llmSend],["detectLanguage",()=>detectLanguage],["translate",()=>translate]]);_6d2‍.w("ollama",[["default",["ollama"],function(v){ollama=v}]]);

let translatorHost = "http://localhost:5555";

let chat = {
  model: "wizard-vicuna-uncensored:13b",
  role: "user",
  content: "Привет!!! Как дела?"
}

       async function llmSend(chat){
  try {
    console.log("Отправка запроса языковой модели:");
    _6d2‍.g.console.log(chat);
    const response = await ollama.chat({
      model: chat.model,
      messages: [{ role: chat.role, content: chat.content }],
    });
    console.log("Получен ответ от языковой модели:");
    _6d2‍.g.console.log(response);
    return response;
  }
  catch(error) {
    console.log("Ошибка запроса");
    _6d2‍.g.console.log(error);
    return error;
  }
}


// async function invokeLLM(chat) {
//   let messageLanguage = await detectLanguage(chat.content);

//   if (messageLanguage == "ru") {
//     let translatedContent = await translate(chat.content,"ru","en");
//     chat.content = translatedContent;
//   }

  
//   let response = await send(chat);
//   console.log(await translate(response.message.content,"en","ru"));
//   return response;
// }

       async function detectLanguage(message){
  try {
    console.log("Проверка языка для сообщения:");
    _6d2‍.g.console.log(message);
    const res = await fetch(translatorHost+"/detect", {
      method: "POST",
      body: JSON.stringify({
        q: message,
        api_key: ""
      }),
      headers: { "Content-Type": "application/json" }
    });
    let response = await res.json();
    let language = response[0].language;
    
    _6d2‍.g.console.log("Язык сообщения: "+language);
    return language;
  } catch (error) {
    console.log("Ошибка проверки:");
    _6d2‍.g.console.log(error);
    return error;
  }
}

       async function translate(message,sourceLanguage,targetLanguage){
  try {
    console.log("Перевод сообщения:");
    _6d2‍.g.console.log(message);
    const res = await fetch(translatorHost+"/translate", {
      method: "POST",
      body: JSON.stringify({
        q: message,
        source: sourceLanguage,
        target: targetLanguage,
        format: "text",
        alternatives: 0,
        api_key: ""
      }),
      headers: { "Content-Type": "application/json" }
    });
    let response = await res.json();
    let translatedText = response.translatedText;
    
    _6d2‍.g.console.log("Переведенное сообщение: "+translatedText);
    return translatedText;
  } catch (error) {
    console.log("Ошибка перевода:");
    _6d2‍.g.console.log(error);
    return error;
  }
}

// invokeLLM(chat);
