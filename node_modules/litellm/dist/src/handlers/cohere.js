"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }
var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CohereHandler = void 0;
const cohere_ai_1 = __importDefault(require("cohere-ai"));
const combinePrompts_1 = require("../utils/combinePrompts");
const getUnixTimestamp_1 = require("../utils/getUnixTimestamp");
const toUsage_1 = require("../utils/toUsage");
// eslint-disable-next-line @typescript-eslint/require-await
function toStream(response, model, prompt) {
    return __asyncGenerator(this, arguments, function* toStream_1() {
        yield yield __await({
            model: model,
            created: (0, getUnixTimestamp_1.getUnixTimestamp)(),
            usage: (0, toUsage_1.toUsage)(prompt, response.body.generations[0].text),
            choices: [
                {
                    delta: {
                        content: response.body.generations[0].text,
                        role: 'assistant',
                    },
                    finish_reason: 'stop',
                    index: 0,
                },
            ],
        });
    });
}
function CohereHandler(params) {
    var _a;
    return __awaiter(this, void 0, void 0, function* () {
        const apiKey = (_a = params.apiKey) !== null && _a !== void 0 ? _a : process.env.COHERE_API_KEY;
        cohere_ai_1.default.init(apiKey);
        const textsCombined = (0, combinePrompts_1.combinePrompts)(params.messages);
        const config = {
            model: params.model,
            prompt: textsCombined,
            max_tokens: 50,
            temperature: 1,
        };
        const response = yield cohere_ai_1.default.generate(config);
        if (params.stream) {
            return toStream(response, params.model, textsCombined);
        }
        return {
            model: params.model,
            created: (0, getUnixTimestamp_1.getUnixTimestamp)(),
            usage: (0, toUsage_1.toUsage)(textsCombined, response.body.generations[0].text),
            choices: [
                {
                    message: {
                        content: response.body.generations[0].text,
                        role: 'assistant',
                    },
                    finish_reason: 'stop',
                    index: 0,
                },
            ],
        };
    });
}
exports.CohereHandler = CohereHandler;
