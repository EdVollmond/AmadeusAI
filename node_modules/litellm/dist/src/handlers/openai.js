"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
var __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }
var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpenAIHandler = void 0;
const openai_1 = __importDefault(require("openai"));
function toStreamingResponse(response) {
    return __asyncGenerator(this, arguments, function* toStreamingResponse_1() {
        var _a, e_1, _b, _c;
        try {
            for (var _d = true, response_1 = __asyncValues(response), response_1_1; response_1_1 = yield __await(response_1.next()), _a = response_1_1.done, !_a; _d = true) {
                _c = response_1_1.value;
                _d = false;
                const chunk = _c;
                yield yield __await({
                    model: chunk.model,
                    created: chunk.created,
                    choices: chunk.choices.map((openAIChoice) => {
                        return {
                            delta: {
                                content: openAIChoice.delta.content,
                                role: openAIChoice.delta.role,
                                function_call: openAIChoice.delta.function_call,
                            },
                            index: openAIChoice.index,
                            finish_reason: openAIChoice.finish_reason,
                        };
                    }),
                });
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (!_d && !_a && (_b = response_1.return)) yield __await(_b.call(response_1));
            }
            finally { if (e_1) throw e_1.error; }
        }
    });
}
function OpenAIHandler(params) {
    return __awaiter(this, void 0, void 0, function* () {
        const { apiKey: providedApiKey, baseUrl: providedBaseUrl } = params, completionsParams = __rest(params, ["apiKey", "baseUrl"]);
        const apiKey = providedApiKey !== null && providedApiKey !== void 0 ? providedApiKey : process.env.OPENAI_API_KEY;
        const baseUrl = providedBaseUrl !== null && providedBaseUrl !== void 0 ? providedBaseUrl : 'https://api.openai.com/v1';
        const openai = new openai_1.default({
            apiKey: apiKey,
            baseURL: baseUrl,
        });
        if (params.stream) {
            const response = yield openai.chat.completions.create(Object.assign(Object.assign({}, completionsParams), { stream: params.stream }));
            return toStreamingResponse(response);
        }
        return openai.chat.completions.create(Object.assign(Object.assign({}, completionsParams), { stream: false }));
    });
}
exports.OpenAIHandler = OpenAIHandler;
