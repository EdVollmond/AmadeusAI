"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MistralEmbeddingHandler = void 0;
function getMistralResponse(model, input, baseUrl, apiKey) {
    return __awaiter(this, void 0, void 0, function* () {
        return fetch(`${baseUrl}/v1/embeddings`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                Authorization: `Bearer ${apiKey}`,
            },
            body: JSON.stringify({
                model,
                input: typeof input === 'string' ? [input] : input,
            }),
        });
    });
}
function MistralEmbeddingHandler(params) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function* () {
        const model = params.model.split('mistral/')[1];
        const baseUrl = (_a = params.baseUrl) !== null && _a !== void 0 ? _a : 'https://api.mistral.ai';
        const apiKey = (_b = params.apiKey) !== null && _b !== void 0 ? _b : process.env.MISTRAL_API_KEY;
        const response = yield getMistralResponse(model, params.input, baseUrl, apiKey);
        if (!response.ok) {
            throw new Error(`Received an error with code ${response.status} from Mistral API.`);
        }
        const body = (yield response.json());
        return body;
    });
}
exports.MistralEmbeddingHandler = MistralEmbeddingHandler;
