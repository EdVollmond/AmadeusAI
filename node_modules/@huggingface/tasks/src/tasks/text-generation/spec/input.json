{
	"$id": "/inference/schemas/text-generation/input.json",
	"$schema": "http://json-schema.org/draft-06/schema#",
	"description": "Text Generation Input.\n\nAuto-generated from TGI specs.\nFor more details, check out https://github.com/huggingface/huggingface.js/blob/main/packages/tasks/scripts/inference-tgi-import.ts.",
	"title": "TextGenerationInput",
	"type": "object",
	"required": ["inputs"],
	"properties": {
		"inputs": {
			"type": "string",
			"example": "My name is Olivier and I"
		},
		"parameters": {
			"$ref": "#/$defs/TextGenerationInputGenerateParameters"
		},
		"stream": {
			"type": "boolean",
			"default": "false"
		}
	},
	"$defs": {
		"TextGenerationInputGenerateParameters": {
			"type": "object",
			"properties": {
				"best_of": {
					"type": "integer",
					"default": "null",
					"example": 1,
					"nullable": true,
					"minimum": 0,
					"exclusiveMinimum": 0
				},
				"decoder_input_details": {
					"type": "boolean",
					"default": "false"
				},
				"details": {
					"type": "boolean",
					"default": "true"
				},
				"do_sample": {
					"type": "boolean",
					"default": "false",
					"example": true
				},
				"frequency_penalty": {
					"type": "number",
					"format": "float",
					"default": "null",
					"example": 0.1,
					"nullable": true,
					"exclusiveMinimum": -2
				},
				"grammar": {
					"allOf": [
						{
							"$ref": "#/$defs/TextGenerationInputGrammarType"
						}
					],
					"default": "null",
					"nullable": true
				},
				"max_new_tokens": {
					"type": "integer",
					"format": "int32",
					"default": "100",
					"example": "20",
					"nullable": true,
					"minimum": 0
				},
				"repetition_penalty": {
					"type": "number",
					"format": "float",
					"default": "null",
					"example": 1.03,
					"nullable": true,
					"exclusiveMinimum": 0
				},
				"return_full_text": {
					"type": "boolean",
					"default": "null",
					"example": false,
					"nullable": true
				},
				"seed": {
					"type": "integer",
					"format": "int64",
					"default": "null",
					"example": "null",
					"nullable": true,
					"minimum": 0,
					"exclusiveMinimum": 0
				},
				"stop": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["photographer"],
					"maxItems": 4
				},
				"temperature": {
					"type": "number",
					"format": "float",
					"default": "null",
					"example": 0.5,
					"nullable": true,
					"exclusiveMinimum": 0
				},
				"top_k": {
					"type": "integer",
					"format": "int32",
					"default": "null",
					"example": 10,
					"nullable": true,
					"exclusiveMinimum": 0
				},
				"top_n_tokens": {
					"type": "integer",
					"format": "int32",
					"default": "null",
					"example": 5,
					"nullable": true,
					"minimum": 0,
					"exclusiveMinimum": 0
				},
				"top_p": {
					"type": "number",
					"format": "float",
					"default": "null",
					"example": 0.95,
					"nullable": true,
					"maximum": 1,
					"exclusiveMinimum": 0
				},
				"truncate": {
					"type": "integer",
					"default": "null",
					"example": "null",
					"nullable": true,
					"minimum": 0
				},
				"typical_p": {
					"type": "number",
					"format": "float",
					"default": "null",
					"example": 0.95,
					"nullable": true,
					"maximum": 1,
					"exclusiveMinimum": 0
				},
				"watermark": {
					"type": "boolean",
					"default": "false",
					"example": true
				}
			},
			"title": "TextGenerationInputGenerateParameters"
		},
		"TextGenerationInputGrammarType": {
			"oneOf": [
				{
					"type": "object",
					"required": ["type", "value"],
					"properties": {
						"type": {
							"type": "string",
							"enum": ["json"]
						},
						"value": {
							"description": "A string that represents a [JSON Schema](https://json-schema.org/).\n\nJSON Schema is a declarative language that allows to annotate JSON documents\nwith types and descriptions."
						}
					}
				},
				{
					"type": "object",
					"required": ["type", "value"],
					"properties": {
						"type": {
							"type": "string",
							"enum": ["regex"]
						},
						"value": {
							"type": "string"
						}
					}
				}
			],
			"discriminator": {
				"propertyName": "type"
			},
			"title": "TextGenerationInputGrammarType"
		}
	}
}
