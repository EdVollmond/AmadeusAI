import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";
/**
 * The name of the model to fine-tune.
 */
export declare const FineTuneableModel: {
    readonly OpenMistral7b: "open-mistral-7b";
    readonly MistralSmallLatest: "mistral-small-latest";
    readonly CodestralLatest: "codestral-latest";
    readonly MistralLargeLatest: "mistral-large-latest";
    readonly OpenMistralNemo: "open-mistral-nemo";
};
/**
 * The name of the model to fine-tune.
 */
export type FineTuneableModel = ClosedEnum<typeof FineTuneableModel>;
/** @internal */
export declare const FineTuneableModel$inboundSchema: z.ZodNativeEnum<typeof FineTuneableModel>;
/** @internal */
export declare const FineTuneableModel$outboundSchema: z.ZodNativeEnum<typeof FineTuneableModel>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FineTuneableModel$ {
    /** @deprecated use `FineTuneableModel$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly OpenMistral7b: "open-mistral-7b";
        readonly MistralSmallLatest: "mistral-small-latest";
        readonly CodestralLatest: "codestral-latest";
        readonly MistralLargeLatest: "mistral-large-latest";
        readonly OpenMistralNemo: "open-mistral-nemo";
    }>;
    /** @deprecated use `FineTuneableModel$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly OpenMistral7b: "open-mistral-7b";
        readonly MistralSmallLatest: "mistral-small-latest";
        readonly CodestralLatest: "codestral-latest";
        readonly MistralLargeLatest: "mistral-large-latest";
        readonly OpenMistralNemo: "open-mistral-nemo";
    }>;
}
//# sourceMappingURL=finetuneablemodel.d.ts.map