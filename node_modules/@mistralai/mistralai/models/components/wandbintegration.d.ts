import * as z from "zod";
export type WandbIntegration = {
    type?: "wandb" | undefined;
    /**
     * The name of the project that the new run will be created under.
     */
    project: string;
    /**
     * A display name to set for the run. If not set, will use the job ID as the name.
     */
    name?: string | null | undefined;
    /**
     * The WandB API key to use for authentication.
     */
    apiKey: string;
    runName?: string | null | undefined;
};
/** @internal */
export declare const WandbIntegration$inboundSchema: z.ZodType<WandbIntegration, z.ZodTypeDef, unknown>;
/** @internal */
export type WandbIntegration$Outbound = {
    type: "wandb";
    project: string;
    name?: string | null | undefined;
    api_key: string;
    run_name?: string | null | undefined;
};
/** @internal */
export declare const WandbIntegration$outboundSchema: z.ZodType<WandbIntegration$Outbound, z.ZodTypeDef, WandbIntegration>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WandbIntegration$ {
    /** @deprecated use `WandbIntegration$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WandbIntegration, z.ZodTypeDef, unknown>;
    /** @deprecated use `WandbIntegration$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WandbIntegration$Outbound, z.ZodTypeDef, WandbIntegration>;
    /** @deprecated use `WandbIntegration$Outbound` instead. */
    type Outbound = WandbIntegration$Outbound;
}
//# sourceMappingURL=wandbintegration.d.ts.map