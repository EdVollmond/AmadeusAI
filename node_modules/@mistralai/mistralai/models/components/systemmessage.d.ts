import { ClosedEnum } from "../../types/enums.js";
import { ContentChunk, ContentChunk$Outbound } from "./contentchunk.js";
import * as z from "zod";
export type Content = string | Array<ContentChunk>;
export declare const Role: {
    readonly System: "system";
};
export type Role = ClosedEnum<typeof Role>;
export type SystemMessage = {
    content: string | Array<ContentChunk>;
    role?: Role | undefined;
};
/** @internal */
export declare const Content$inboundSchema: z.ZodType<Content, z.ZodTypeDef, unknown>;
/** @internal */
export type Content$Outbound = string | Array<ContentChunk$Outbound>;
/** @internal */
export declare const Content$outboundSchema: z.ZodType<Content$Outbound, z.ZodTypeDef, Content>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Content$ {
    /** @deprecated use `Content$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Content, z.ZodTypeDef, unknown>;
    /** @deprecated use `Content$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Content$Outbound, z.ZodTypeDef, Content>;
    /** @deprecated use `Content$Outbound` instead. */
    type Outbound = Content$Outbound;
}
/** @internal */
export declare const Role$inboundSchema: z.ZodNativeEnum<typeof Role>;
/** @internal */
export declare const Role$outboundSchema: z.ZodNativeEnum<typeof Role>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Role$ {
    /** @deprecated use `Role$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
    }>;
    /** @deprecated use `Role$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly System: "system";
    }>;
}
/** @internal */
export declare const SystemMessage$inboundSchema: z.ZodType<SystemMessage, z.ZodTypeDef, unknown>;
/** @internal */
export type SystemMessage$Outbound = {
    content: string | Array<ContentChunk$Outbound>;
    role: string;
};
/** @internal */
export declare const SystemMessage$outboundSchema: z.ZodType<SystemMessage$Outbound, z.ZodTypeDef, SystemMessage>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SystemMessage$ {
    /** @deprecated use `SystemMessage$inboundSchema` instead. */
    const inboundSchema: z.ZodType<SystemMessage, z.ZodTypeDef, unknown>;
    /** @deprecated use `SystemMessage$outboundSchema` instead. */
    const outboundSchema: z.ZodType<SystemMessage$Outbound, z.ZodTypeDef, SystemMessage>;
    /** @deprecated use `SystemMessage$Outbound` instead. */
    type Outbound = SystemMessage$Outbound;
}
//# sourceMappingURL=systemmessage.d.ts.map