import * as z from "zod";
/**
 * The fine-tuning hyperparameter settings used in a fine-tune job.
 */
export type TrainingParametersIn = {
    /**
     * The number of training steps to perform. A training step refers to a single update of the model weights during the fine-tuning process. This update is typically calculated using a batch of samples from the training dataset.
     */
    trainingSteps?: number | null | undefined;
    /**
     * A parameter describing how much to adjust the pre-trained model's weights in response to the estimated error each time the weights are updated during the fine-tuning process.
     */
    learningRate?: number | undefined;
    epochs?: number | null | undefined;
    fimRatio?: number | null | undefined;
};
/** @internal */
export declare const TrainingParametersIn$inboundSchema: z.ZodType<TrainingParametersIn, z.ZodTypeDef, unknown>;
/** @internal */
export type TrainingParametersIn$Outbound = {
    training_steps?: number | null | undefined;
    learning_rate: number;
    epochs?: number | null | undefined;
    fim_ratio?: number | null | undefined;
};
/** @internal */
export declare const TrainingParametersIn$outboundSchema: z.ZodType<TrainingParametersIn$Outbound, z.ZodTypeDef, TrainingParametersIn>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TrainingParametersIn$ {
    /** @deprecated use `TrainingParametersIn$inboundSchema` instead. */
    const inboundSchema: z.ZodType<TrainingParametersIn, z.ZodTypeDef, unknown>;
    /** @deprecated use `TrainingParametersIn$outboundSchema` instead. */
    const outboundSchema: z.ZodType<TrainingParametersIn$Outbound, z.ZodTypeDef, TrainingParametersIn>;
    /** @deprecated use `TrainingParametersIn$Outbound` instead. */
    type Outbound = TrainingParametersIn$Outbound;
}
//# sourceMappingURL=trainingparametersin.d.ts.map