import { ModelCard, ModelCard$Outbound } from "./modelcard.js";
import * as z from "zod";
export type ModelList = {
    object?: string | undefined;
    data?: Array<ModelCard> | undefined;
};
/** @internal */
export declare const ModelList$inboundSchema: z.ZodType<ModelList, z.ZodTypeDef, unknown>;
/** @internal */
export type ModelList$Outbound = {
    object: string;
    data?: Array<ModelCard$Outbound> | undefined;
};
/** @internal */
export declare const ModelList$outboundSchema: z.ZodType<ModelList$Outbound, z.ZodTypeDef, ModelList>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ModelList$ {
    /** @deprecated use `ModelList$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ModelList, z.ZodTypeDef, unknown>;
    /** @deprecated use `ModelList$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ModelList$Outbound, z.ZodTypeDef, ModelList>;
    /** @deprecated use `ModelList$Outbound` instead. */
    type Outbound = ModelList$Outbound;
}
//# sourceMappingURL=modellist.d.ts.map