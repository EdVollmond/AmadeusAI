import { ChatCompletionChoice, ChatCompletionChoice$Outbound } from "./chatcompletionchoice.js";
import { UsageInfo, UsageInfo$Outbound } from "./usageinfo.js";
import * as z from "zod";
export type ChatCompletionResponse = {
    id: string;
    object: string;
    model: string;
    usage: UsageInfo;
    created?: number | undefined;
    choices?: Array<ChatCompletionChoice> | undefined;
};
/** @internal */
export declare const ChatCompletionResponse$inboundSchema: z.ZodType<ChatCompletionResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type ChatCompletionResponse$Outbound = {
    id: string;
    object: string;
    model: string;
    usage: UsageInfo$Outbound;
    created?: number | undefined;
    choices?: Array<ChatCompletionChoice$Outbound> | undefined;
};
/** @internal */
export declare const ChatCompletionResponse$outboundSchema: z.ZodType<ChatCompletionResponse$Outbound, z.ZodTypeDef, ChatCompletionResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ChatCompletionResponse$ {
    /** @deprecated use `ChatCompletionResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ChatCompletionResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `ChatCompletionResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ChatCompletionResponse$Outbound, z.ZodTypeDef, ChatCompletionResponse>;
    /** @deprecated use `ChatCompletionResponse$Outbound` instead. */
    type Outbound = ChatCompletionResponse$Outbound;
}
//# sourceMappingURL=chatcompletionresponse.d.ts.map