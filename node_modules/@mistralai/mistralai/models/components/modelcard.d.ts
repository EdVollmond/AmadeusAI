import { ModelCapabilities, ModelCapabilities$Outbound } from "./modelcapabilities.js";
import * as z from "zod";
export type ModelCard = {
    id: string;
    object?: string | undefined;
    created?: number | undefined;
    ownedBy?: string | undefined;
    root?: string | null | undefined;
    archived?: boolean | undefined;
    name?: string | null | undefined;
    description?: string | null | undefined;
    capabilities: ModelCapabilities;
    maxContextLength?: number | undefined;
    aliases?: Array<string> | undefined;
    deprecation?: Date | null | undefined;
};
/** @internal */
export declare const ModelCard$inboundSchema: z.ZodType<ModelCard, z.ZodTypeDef, unknown>;
/** @internal */
export type ModelCard$Outbound = {
    id: string;
    object: string;
    created?: number | undefined;
    owned_by: string;
    root?: string | null | undefined;
    archived: boolean;
    name?: string | null | undefined;
    description?: string | null | undefined;
    capabilities: ModelCapabilities$Outbound;
    max_context_length: number;
    aliases?: Array<string> | undefined;
    deprecation?: string | null | undefined;
};
/** @internal */
export declare const ModelCard$outboundSchema: z.ZodType<ModelCard$Outbound, z.ZodTypeDef, ModelCard>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ModelCard$ {
    /** @deprecated use `ModelCard$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ModelCard, z.ZodTypeDef, unknown>;
    /** @deprecated use `ModelCard$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ModelCard$Outbound, z.ZodTypeDef, ModelCard>;
    /** @deprecated use `ModelCard$Outbound` instead. */
    type Outbound = ModelCard$Outbound;
}
//# sourceMappingURL=modelcard.d.ts.map