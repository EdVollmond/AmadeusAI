/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    ModelCard,
    ModelCard$inboundSchema,
    ModelCard$Outbound,
    ModelCard$outboundSchema,
} from "./modelcard.js";
import * as z from "zod";

export type ModelList = {
    object?: string | undefined;
    data?: Array<ModelCard> | undefined;
};

/** @internal */
export const ModelList$inboundSchema: z.ZodType<ModelList, z.ZodTypeDef, unknown> = z.object({
    object: z.string().default("list"),
    data: z.array(ModelCard$inboundSchema).optional(),
});

/** @internal */
export type ModelList$Outbound = {
    object: string;
    data?: Array<ModelCard$Outbound> | undefined;
};

/** @internal */
export const ModelList$outboundSchema: z.ZodType<ModelList$Outbound, z.ZodTypeDef, ModelList> =
    z.object({
        object: z.string().default("list"),
        data: z.array(ModelCard$outboundSchema).optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModelList$ {
    /** @deprecated use `ModelList$inboundSchema` instead. */
    export const inboundSchema = ModelList$inboundSchema;
    /** @deprecated use `ModelList$outboundSchema` instead. */
    export const outboundSchema = ModelList$outboundSchema;
    /** @deprecated use `ModelList$Outbound` instead. */
    export type Outbound = ModelList$Outbound;
}
