import {
  ActionSource,
  ActionStatus,
  AlgorithmSpecification,
  AlgorithmStatus,
  AlgorithmStatusDetails,
  AlgorithmValidationSpecification,
  AppNetworkAccessType,
  AppSecurityGroupManagement,
  AppSpecification,
  AppStatus,
  AppType,
  ArtifactSource,
  AsyncInferenceConfig,
  AthenaDatasetDefinition,
  AuthMode,
  AutoMLCandidate,
  AutoMLChannel,
  AutoMLComputeConfig,
  AutoMLDataSplitConfig,
  AutoMLJobArtifacts,
  AutoMLJobChannel,
  AutoMLJobCompletionCriteria,
  AutoMLJobConfig,
  AutoMLJobObjective,
  AutoMLJobSecondaryStatus,
  AutoMLJobStatus,
  AutoMLOutputDataConfig,
  AutoMLPartialFailureReason,
  AutoMLProblemTypeConfig,
  AutoMLProblemTypeConfigName,
  AutoMLResolvedAttributes,
  AutoMLSecurityConfig,
  Autotune,
  BatchDataCaptureConfig,
  BatchStrategy,
  CaptureStatus,
  Channel,
  CheckpointConfig,
  ClusterInstanceGroupDetails,
  ClusterNodeDetails,
  ClusterStatus,
  CodeEditorAppImageConfig,
  CodeRepository,
  CognitoConfig,
  CognitoMemberDefinition,
  CollectionConfiguration,
  CompilationJobStatus,
  ContainerDefinition,
  ContextSource,
  GitConfig,
  HyperParameterTuningJobObjectiveType,
  InferenceSpecification,
  JupyterLabAppImageConfig,
  KernelGatewayImageConfig,
  MetadataProperties,
  ModelDeployConfig,
  ObjectiveStatus,
  OutputDataConfig,
  ProblemType,
  ProcessingS3DataDistributionType,
  ProcessingS3InputMode,
  ProductionVariantInstanceType,
  ResourceConfig,
  ResourceSpec,
  StoppingCondition,
  Tag,
  TrainingSpecification,
  TransformInput,
  TransformOutput,
  TransformResources,
  UserContext,
  VpcConfig,
} from "./models_0";
import {
  DataCaptureConfig,
  DataDistributionType,
  DataQualityAppSpecification,
  DataQualityBaselineConfig,
  DataQualityJobInput,
  DefaultSpaceSettings,
  DeploymentConfig,
  DeviceSelectionConfig,
  DomainSettings,
  EdgeDeploymentConfig,
  EdgeDeploymentModelConfig,
  EdgeOutputConfig,
  EdgePresetDeploymentType,
  EndpointInfo,
  ExperimentConfig,
  ExplainerConfig,
  FeatureDefinition,
  FeatureType,
  FlowDefinitionOutputConfig,
  HubS3StorageConfig,
  HumanLoopActivationConfig,
  HumanLoopConfig,
  HumanLoopRequestSource,
  HumanTaskConfig,
  HyperParameterTrainingJobDefinition,
  HyperParameterTuningJobConfig,
  HyperParameterTuningJobWarmStartConfig,
  InferenceComponentComputeResourceRequirements,
  InferenceComponentStartupParameters,
  InferenceExecutionConfig,
  InferenceExperimentDataStorageConfig,
  InferenceExperimentSchedule,
  InferenceExperimentType,
  InputConfig,
  InputMode,
  JobType,
  JupyterServerAppSettings,
  KernelGatewayAppSettings,
  LabelingJobAlgorithmsConfig,
  LabelingJobInputConfig,
  LabelingJobOutputConfig,
  LabelingJobStoppingConditions,
  ModelBiasAppSpecification,
  ModelBiasBaselineConfig,
  ModelBiasJobInput,
  ModelInfrastructureConfig,
  MonitoringNetworkConfig,
  MonitoringOutputConfig,
  MonitoringResources,
  MonitoringStoppingCondition,
  NeoVpcConfig,
  NetworkConfig,
  OfflineStoreConfig,
  OnlineStoreConfig,
  OutputConfig,
  ProcessingInstanceType,
  ProcessingS3UploadMode,
  Processor,
  ProductionVariant,
  ProductionVariantAcceleratorType,
  ProductionVariantManagedInstanceScaling,
  ProductionVariantRoutingConfig,
  ProductionVariantServerlessConfig,
  RecommendationJobInputConfig,
  RecommendationJobStoppingConditions,
  RecommendationJobType,
  RedshiftResultCompressionType,
  RedshiftResultFormat,
  RetryStrategy,
  ShadowModeConfig,
  ThroughputMode,
  TrackingServerSize,
  UserSettings,
  VendorGuidance,
} from "./models_1";
export interface RedshiftDatasetDefinition {
  ClusterId: string | undefined;
  Database: string | undefined;
  DbUser: string | undefined;
  QueryString: string | undefined;
  ClusterRoleArn: string | undefined;
  OutputS3Uri: string | undefined;
  KmsKeyId?: string;
  OutputFormat: RedshiftResultFormat | undefined;
  OutputCompression?: RedshiftResultCompressionType;
}
export interface DatasetDefinition {
  AthenaDatasetDefinition?: AthenaDatasetDefinition;
  RedshiftDatasetDefinition?: RedshiftDatasetDefinition;
  LocalPath?: string;
  DataDistributionType?: DataDistributionType;
  InputMode?: InputMode;
}
export declare const ProcessingS3CompressionType: {
  readonly GZIP: "Gzip";
  readonly NONE: "None";
};
export type ProcessingS3CompressionType =
  (typeof ProcessingS3CompressionType)[keyof typeof ProcessingS3CompressionType];
export declare const ProcessingS3DataType: {
  readonly MANIFEST_FILE: "ManifestFile";
  readonly S3_PREFIX: "S3Prefix";
};
export type ProcessingS3DataType =
  (typeof ProcessingS3DataType)[keyof typeof ProcessingS3DataType];
export interface ProcessingS3Input {
  S3Uri: string | undefined;
  LocalPath?: string;
  S3DataType: ProcessingS3DataType | undefined;
  S3InputMode?: ProcessingS3InputMode;
  S3DataDistributionType?: ProcessingS3DataDistributionType;
  S3CompressionType?: ProcessingS3CompressionType;
}
export interface ProcessingInput {
  InputName: string | undefined;
  AppManaged?: boolean;
  S3Input?: ProcessingS3Input;
  DatasetDefinition?: DatasetDefinition;
}
export interface ProcessingFeatureStoreOutput {
  FeatureGroupName: string | undefined;
}
export interface ProcessingS3Output {
  S3Uri: string | undefined;
  LocalPath?: string;
  S3UploadMode: ProcessingS3UploadMode | undefined;
}
export interface ProcessingOutput {
  OutputName: string | undefined;
  S3Output?: ProcessingS3Output;
  FeatureStoreOutput?: ProcessingFeatureStoreOutput;
  AppManaged?: boolean;
}
export interface ProcessingOutputConfig {
  Outputs: ProcessingOutput[] | undefined;
  KmsKeyId?: string;
}
export interface ProcessingClusterConfig {
  InstanceCount: number | undefined;
  InstanceType: ProcessingInstanceType | undefined;
  VolumeSizeInGB: number | undefined;
  VolumeKmsKeyId?: string;
}
export interface ProcessingResources {
  ClusterConfig: ProcessingClusterConfig | undefined;
}
export interface ProcessingStoppingCondition {
  MaxRuntimeInSeconds: number | undefined;
}
export interface CreateProcessingJobRequest {
  ProcessingInputs?: ProcessingInput[];
  ProcessingOutputConfig?: ProcessingOutputConfig;
  ProcessingJobName: string | undefined;
  ProcessingResources: ProcessingResources | undefined;
  StoppingCondition?: ProcessingStoppingCondition;
  AppSpecification: AppSpecification | undefined;
  Environment?: Record<string, string>;
  NetworkConfig?: NetworkConfig;
  RoleArn: string | undefined;
  Tags?: Tag[];
  ExperimentConfig?: ExperimentConfig;
}
export interface CreateProcessingJobResponse {
  ProcessingJobArn: string | undefined;
}
export interface ProvisioningParameter {
  Key?: string;
  Value?: string;
}
export interface ServiceCatalogProvisioningDetails {
  ProductId: string | undefined;
  ProvisioningArtifactId?: string;
  PathId?: string;
  ProvisioningParameters?: ProvisioningParameter[];
}
export interface CreateProjectInput {
  ProjectName: string | undefined;
  ProjectDescription?: string;
  ServiceCatalogProvisioningDetails:
    | ServiceCatalogProvisioningDetails
    | undefined;
  Tags?: Tag[];
}
export interface CreateProjectOutput {
  ProjectArn: string | undefined;
  ProjectId: string | undefined;
}
export interface OwnershipSettings {
  OwnerUserProfileName: string | undefined;
}
export interface SpaceCodeEditorAppSettings {
  DefaultResourceSpec?: ResourceSpec;
}
export interface EFSFileSystem {
  FileSystemId: string | undefined;
}
export type CustomFileSystem =
  | CustomFileSystem.EFSFileSystemMember
  | CustomFileSystem.$UnknownMember;
export declare namespace CustomFileSystem {
  interface EFSFileSystemMember {
    EFSFileSystem: EFSFileSystem;
    $unknown?: never;
  }
  interface $UnknownMember {
    EFSFileSystem?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    EFSFileSystem: (value: EFSFileSystem) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: CustomFileSystem, visitor: Visitor<T>) => T;
}
export interface SpaceJupyterLabAppSettings {
  DefaultResourceSpec?: ResourceSpec;
  CodeRepositories?: CodeRepository[];
}
export interface EbsStorageSettings {
  EbsVolumeSizeInGb: number | undefined;
}
export interface SpaceStorageSettings {
  EbsStorageSettings?: EbsStorageSettings;
}
export interface SpaceSettings {
  JupyterServerAppSettings?: JupyterServerAppSettings;
  KernelGatewayAppSettings?: KernelGatewayAppSettings;
  CodeEditorAppSettings?: SpaceCodeEditorAppSettings;
  JupyterLabAppSettings?: SpaceJupyterLabAppSettings;
  AppType?: AppType;
  SpaceStorageSettings?: SpaceStorageSettings;
  CustomFileSystems?: CustomFileSystem[];
}
export declare const SharingType: {
  readonly Private: "Private";
  readonly Shared: "Shared";
};
export type SharingType = (typeof SharingType)[keyof typeof SharingType];
export interface SpaceSharingSettings {
  SharingType: SharingType | undefined;
}
export interface CreateSpaceRequest {
  DomainId: string | undefined;
  SpaceName: string | undefined;
  Tags?: Tag[];
  SpaceSettings?: SpaceSettings;
  OwnershipSettings?: OwnershipSettings;
  SpaceSharingSettings?: SpaceSharingSettings;
  SpaceDisplayName?: string;
}
export interface CreateSpaceResponse {
  SpaceArn?: string;
}
export declare const StudioLifecycleConfigAppType: {
  readonly CodeEditor: "CodeEditor";
  readonly JupyterLab: "JupyterLab";
  readonly JupyterServer: "JupyterServer";
  readonly KernelGateway: "KernelGateway";
};
export type StudioLifecycleConfigAppType =
  (typeof StudioLifecycleConfigAppType)[keyof typeof StudioLifecycleConfigAppType];
export interface CreateStudioLifecycleConfigRequest {
  StudioLifecycleConfigName: string | undefined;
  StudioLifecycleConfigContent: string | undefined;
  StudioLifecycleConfigAppType: StudioLifecycleConfigAppType | undefined;
  Tags?: Tag[];
}
export interface CreateStudioLifecycleConfigResponse {
  StudioLifecycleConfigArn?: string;
}
export interface DebugHookConfig {
  LocalPath?: string;
  S3OutputPath: string | undefined;
  HookParameters?: Record<string, string>;
  CollectionConfigurations?: CollectionConfiguration[];
}
export interface DebugRuleConfiguration {
  RuleConfigurationName: string | undefined;
  LocalPath?: string;
  S3OutputPath?: string;
  RuleEvaluatorImage: string | undefined;
  InstanceType?: ProcessingInstanceType;
  VolumeSizeInGB?: number;
  RuleParameters?: Record<string, string>;
}
export interface InfraCheckConfig {
  EnableInfraCheck?: boolean;
}
export interface ProfilerConfig {
  S3OutputPath?: string;
  ProfilingIntervalInMilliseconds?: number;
  ProfilingParameters?: Record<string, string>;
  DisableProfiler?: boolean;
}
export interface ProfilerRuleConfiguration {
  RuleConfigurationName: string | undefined;
  LocalPath?: string;
  S3OutputPath?: string;
  RuleEvaluatorImage: string | undefined;
  InstanceType?: ProcessingInstanceType;
  VolumeSizeInGB?: number;
  RuleParameters?: Record<string, string>;
}
export interface RemoteDebugConfig {
  EnableRemoteDebug?: boolean;
}
export interface SessionChainingConfig {
  EnableSessionTagChaining?: boolean;
}
export interface TensorBoardOutputConfig {
  LocalPath?: string;
  S3OutputPath: string | undefined;
}
export interface CreateTrainingJobRequest {
  TrainingJobName: string | undefined;
  HyperParameters?: Record<string, string>;
  AlgorithmSpecification: AlgorithmSpecification | undefined;
  RoleArn: string | undefined;
  InputDataConfig?: Channel[];
  OutputDataConfig: OutputDataConfig | undefined;
  ResourceConfig: ResourceConfig | undefined;
  VpcConfig?: VpcConfig;
  StoppingCondition: StoppingCondition | undefined;
  Tags?: Tag[];
  EnableNetworkIsolation?: boolean;
  EnableInterContainerTrafficEncryption?: boolean;
  EnableManagedSpotTraining?: boolean;
  CheckpointConfig?: CheckpointConfig;
  DebugHookConfig?: DebugHookConfig;
  DebugRuleConfigurations?: DebugRuleConfiguration[];
  TensorBoardOutputConfig?: TensorBoardOutputConfig;
  ExperimentConfig?: ExperimentConfig;
  ProfilerConfig?: ProfilerConfig;
  ProfilerRuleConfigurations?: ProfilerRuleConfiguration[];
  Environment?: Record<string, string>;
  RetryStrategy?: RetryStrategy;
  RemoteDebugConfig?: RemoteDebugConfig;
  InfraCheckConfig?: InfraCheckConfig;
  SessionChainingConfig?: SessionChainingConfig;
}
export interface CreateTrainingJobResponse {
  TrainingJobArn: string | undefined;
}
export declare const JoinSource: {
  readonly INPUT: "Input";
  readonly NONE: "None";
};
export type JoinSource = (typeof JoinSource)[keyof typeof JoinSource];
export interface DataProcessing {
  InputFilter?: string;
  OutputFilter?: string;
  JoinSource?: JoinSource;
}
export interface ModelClientConfig {
  InvocationsTimeoutInSeconds?: number;
  InvocationsMaxRetries?: number;
}
export interface CreateTransformJobRequest {
  TransformJobName: string | undefined;
  ModelName: string | undefined;
  MaxConcurrentTransforms?: number;
  ModelClientConfig?: ModelClientConfig;
  MaxPayloadInMB?: number;
  BatchStrategy?: BatchStrategy;
  Environment?: Record<string, string>;
  TransformInput: TransformInput | undefined;
  TransformOutput: TransformOutput | undefined;
  DataCaptureConfig?: BatchDataCaptureConfig;
  TransformResources: TransformResources | undefined;
  DataProcessing?: DataProcessing;
  Tags?: Tag[];
  ExperimentConfig?: ExperimentConfig;
}
export interface CreateTransformJobResponse {
  TransformJobArn: string | undefined;
}
export interface CreateTrialRequest {
  TrialName: string | undefined;
  DisplayName?: string;
  ExperimentName: string | undefined;
  MetadataProperties?: MetadataProperties;
  Tags?: Tag[];
}
export interface CreateTrialResponse {
  TrialArn?: string;
}
export interface TrialComponentArtifact {
  MediaType?: string;
  Value: string | undefined;
}
export type TrialComponentParameterValue =
  | TrialComponentParameterValue.NumberValueMember
  | TrialComponentParameterValue.StringValueMember
  | TrialComponentParameterValue.$UnknownMember;
export declare namespace TrialComponentParameterValue {
  interface StringValueMember {
    StringValue: string;
    NumberValue?: never;
    $unknown?: never;
  }
  interface NumberValueMember {
    StringValue?: never;
    NumberValue: number;
    $unknown?: never;
  }
  interface $UnknownMember {
    StringValue?: never;
    NumberValue?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    StringValue: (value: string) => T;
    NumberValue: (value: number) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: TrialComponentParameterValue,
    visitor: Visitor<T>
  ) => T;
}
export declare const TrialComponentPrimaryStatus: {
  readonly COMPLETED: "Completed";
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly STOPPED: "Stopped";
  readonly STOPPING: "Stopping";
};
export type TrialComponentPrimaryStatus =
  (typeof TrialComponentPrimaryStatus)[keyof typeof TrialComponentPrimaryStatus];
export interface TrialComponentStatus {
  PrimaryStatus?: TrialComponentPrimaryStatus;
  Message?: string;
}
export interface CreateTrialComponentRequest {
  TrialComponentName: string | undefined;
  DisplayName?: string;
  Status?: TrialComponentStatus;
  StartTime?: Date;
  EndTime?: Date;
  Parameters?: Record<string, TrialComponentParameterValue>;
  InputArtifacts?: Record<string, TrialComponentArtifact>;
  OutputArtifacts?: Record<string, TrialComponentArtifact>;
  MetadataProperties?: MetadataProperties;
  Tags?: Tag[];
}
export interface CreateTrialComponentResponse {
  TrialComponentArn?: string;
}
export interface CreateUserProfileRequest {
  DomainId: string | undefined;
  UserProfileName: string | undefined;
  SingleSignOnUserIdentifier?: string;
  SingleSignOnUserValue?: string;
  Tags?: Tag[];
  UserSettings?: UserSettings;
}
export interface CreateUserProfileResponse {
  UserProfileArn?: string;
}
export interface OidcConfig {
  ClientId: string | undefined;
  ClientSecret: string | undefined;
  Issuer: string | undefined;
  AuthorizationEndpoint: string | undefined;
  TokenEndpoint: string | undefined;
  UserInfoEndpoint: string | undefined;
  LogoutEndpoint: string | undefined;
  JwksUri: string | undefined;
  Scope?: string;
  AuthenticationRequestExtraParams?: Record<string, string>;
}
export interface SourceIpConfig {
  Cidrs: string[] | undefined;
}
export interface WorkforceVpcConfigRequest {
  VpcId?: string;
  SecurityGroupIds?: string[];
  Subnets?: string[];
}
export interface CreateWorkforceRequest {
  CognitoConfig?: CognitoConfig;
  OidcConfig?: OidcConfig;
  SourceIpConfig?: SourceIpConfig;
  WorkforceName: string | undefined;
  Tags?: Tag[];
  WorkforceVpcConfig?: WorkforceVpcConfigRequest;
}
export interface CreateWorkforceResponse {
  WorkforceArn: string | undefined;
}
export interface OidcMemberDefinition {
  Groups?: string[];
}
export interface MemberDefinition {
  CognitoMemberDefinition?: CognitoMemberDefinition;
  OidcMemberDefinition?: OidcMemberDefinition;
}
export interface NotificationConfiguration {
  NotificationTopicArn?: string;
}
export declare const EnabledOrDisabled: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type EnabledOrDisabled =
  (typeof EnabledOrDisabled)[keyof typeof EnabledOrDisabled];
export interface IamPolicyConstraints {
  SourceIp?: EnabledOrDisabled;
  VpcSourceIp?: EnabledOrDisabled;
}
export interface S3Presign {
  IamPolicyConstraints?: IamPolicyConstraints;
}
export interface WorkerAccessConfiguration {
  S3Presign?: S3Presign;
}
export interface CreateWorkteamRequest {
  WorkteamName: string | undefined;
  WorkforceName?: string;
  MemberDefinitions: MemberDefinition[] | undefined;
  Description: string | undefined;
  NotificationConfiguration?: NotificationConfiguration;
  WorkerAccessConfiguration?: WorkerAccessConfiguration;
  Tags?: Tag[];
}
export interface CreateWorkteamResponse {
  WorkteamArn?: string;
}
export declare const CrossAccountFilterOption: {
  readonly CROSS_ACCOUNT: "CrossAccount";
  readonly SAME_ACCOUNT: "SameAccount";
};
export type CrossAccountFilterOption =
  (typeof CrossAccountFilterOption)[keyof typeof CrossAccountFilterOption];
export declare const Statistic: {
  readonly AVERAGE: "Average";
  readonly MAXIMUM: "Maximum";
  readonly MINIMUM: "Minimum";
  readonly SAMPLE_COUNT: "SampleCount";
  readonly SUM: "Sum";
};
export type Statistic = (typeof Statistic)[keyof typeof Statistic];
export interface CustomizedMetricSpecification {
  MetricName?: string;
  Namespace?: string;
  Statistic?: Statistic;
}
export interface DataCaptureConfigSummary {
  EnableCapture: boolean | undefined;
  CaptureStatus: CaptureStatus | undefined;
  CurrentSamplingPercentage: number | undefined;
  DestinationS3Uri: string | undefined;
  KmsKeyId: string | undefined;
}
export declare const RuleEvaluationStatus: {
  readonly ERROR: "Error";
  readonly IN_PROGRESS: "InProgress";
  readonly ISSUES_FOUND: "IssuesFound";
  readonly NO_ISSUES_FOUND: "NoIssuesFound";
  readonly STOPPED: "Stopped";
  readonly STOPPING: "Stopping";
};
export type RuleEvaluationStatus =
  (typeof RuleEvaluationStatus)[keyof typeof RuleEvaluationStatus];
export interface DebugRuleEvaluationStatus {
  RuleConfigurationName?: string;
  RuleEvaluationJobArn?: string;
  RuleEvaluationStatus?: RuleEvaluationStatus;
  StatusDetails?: string;
  LastModifiedTime?: Date;
}
export interface DeleteActionRequest {
  ActionName: string | undefined;
}
export interface DeleteActionResponse {
  ActionArn?: string;
}
export interface DeleteAlgorithmInput {
  AlgorithmName: string | undefined;
}
export interface DeleteAppRequest {
  DomainId: string | undefined;
  UserProfileName?: string;
  SpaceName?: string;
  AppType: AppType | undefined;
  AppName: string | undefined;
}
export interface DeleteAppImageConfigRequest {
  AppImageConfigName: string | undefined;
}
export interface DeleteArtifactRequest {
  ArtifactArn?: string;
  Source?: ArtifactSource;
}
export interface DeleteArtifactResponse {
  ArtifactArn?: string;
}
export interface DeleteAssociationRequest {
  SourceArn: string | undefined;
  DestinationArn: string | undefined;
}
export interface DeleteAssociationResponse {
  SourceArn?: string;
  DestinationArn?: string;
}
export interface DeleteClusterRequest {
  ClusterName: string | undefined;
}
export interface DeleteClusterResponse {
  ClusterArn: string | undefined;
}
export interface DeleteCodeRepositoryInput {
  CodeRepositoryName: string | undefined;
}
export interface DeleteCompilationJobRequest {
  CompilationJobName: string | undefined;
}
export interface DeleteContextRequest {
  ContextName: string | undefined;
}
export interface DeleteContextResponse {
  ContextArn?: string;
}
export interface DeleteDataQualityJobDefinitionRequest {
  JobDefinitionName: string | undefined;
}
export interface DeleteDeviceFleetRequest {
  DeviceFleetName: string | undefined;
}
export declare const RetentionType: {
  readonly Delete: "Delete";
  readonly Retain: "Retain";
};
export type RetentionType = (typeof RetentionType)[keyof typeof RetentionType];
export interface RetentionPolicy {
  HomeEfsFileSystem?: RetentionType;
}
export interface DeleteDomainRequest {
  DomainId: string | undefined;
  RetentionPolicy?: RetentionPolicy;
}
export interface DeleteEdgeDeploymentPlanRequest {
  EdgeDeploymentPlanName: string | undefined;
}
export interface DeleteEdgeDeploymentStageRequest {
  EdgeDeploymentPlanName: string | undefined;
  StageName: string | undefined;
}
export interface DeleteEndpointInput {
  EndpointName: string | undefined;
}
export interface DeleteEndpointConfigInput {
  EndpointConfigName: string | undefined;
}
export interface DeleteExperimentRequest {
  ExperimentName: string | undefined;
}
export interface DeleteExperimentResponse {
  ExperimentArn?: string;
}
export interface DeleteFeatureGroupRequest {
  FeatureGroupName: string | undefined;
}
export interface DeleteFlowDefinitionRequest {
  FlowDefinitionName: string | undefined;
}
export interface DeleteFlowDefinitionResponse {}
export interface DeleteHubRequest {
  HubName: string | undefined;
}
export declare const HubContentType: {
  readonly MODEL: "Model";
  readonly MODEL_REFERENCE: "ModelReference";
  readonly NOTEBOOK: "Notebook";
};
export type HubContentType =
  (typeof HubContentType)[keyof typeof HubContentType];
export interface DeleteHubContentRequest {
  HubName: string | undefined;
  HubContentType: HubContentType | undefined;
  HubContentName: string | undefined;
  HubContentVersion: string | undefined;
}
export interface DeleteHubContentReferenceRequest {
  HubName: string | undefined;
  HubContentType: HubContentType | undefined;
  HubContentName: string | undefined;
}
export interface DeleteHumanTaskUiRequest {
  HumanTaskUiName: string | undefined;
}
export interface DeleteHumanTaskUiResponse {}
export interface DeleteHyperParameterTuningJobRequest {
  HyperParameterTuningJobName: string | undefined;
}
export interface DeleteImageRequest {
  ImageName: string | undefined;
}
export interface DeleteImageResponse {}
export interface DeleteImageVersionRequest {
  ImageName: string | undefined;
  Version?: number;
  Alias?: string;
}
export interface DeleteImageVersionResponse {}
export interface DeleteInferenceComponentInput {
  InferenceComponentName: string | undefined;
}
export interface DeleteInferenceExperimentRequest {
  Name: string | undefined;
}
export interface DeleteInferenceExperimentResponse {
  InferenceExperimentArn: string | undefined;
}
export interface DeleteMlflowTrackingServerRequest {
  TrackingServerName: string | undefined;
}
export interface DeleteMlflowTrackingServerResponse {
  TrackingServerArn?: string;
}
export interface DeleteModelInput {
  ModelName: string | undefined;
}
export interface DeleteModelBiasJobDefinitionRequest {
  JobDefinitionName: string | undefined;
}
export interface DeleteModelCardRequest {
  ModelCardName: string | undefined;
}
export interface DeleteModelExplainabilityJobDefinitionRequest {
  JobDefinitionName: string | undefined;
}
export interface DeleteModelPackageInput {
  ModelPackageName: string | undefined;
}
export interface DeleteModelPackageGroupInput {
  ModelPackageGroupName: string | undefined;
}
export interface DeleteModelPackageGroupPolicyInput {
  ModelPackageGroupName: string | undefined;
}
export interface DeleteModelQualityJobDefinitionRequest {
  JobDefinitionName: string | undefined;
}
export interface DeleteMonitoringScheduleRequest {
  MonitoringScheduleName: string | undefined;
}
export interface DeleteNotebookInstanceInput {
  NotebookInstanceName: string | undefined;
}
export interface DeleteNotebookInstanceLifecycleConfigInput {
  NotebookInstanceLifecycleConfigName: string | undefined;
}
export interface DeleteOptimizationJobRequest {
  OptimizationJobName: string | undefined;
}
export interface DeletePipelineRequest {
  PipelineName: string | undefined;
  ClientRequestToken?: string;
}
export interface DeletePipelineResponse {
  PipelineArn?: string;
}
export interface DeleteProjectInput {
  ProjectName: string | undefined;
}
export interface DeleteSpaceRequest {
  DomainId: string | undefined;
  SpaceName: string | undefined;
}
export interface DeleteStudioLifecycleConfigRequest {
  StudioLifecycleConfigName: string | undefined;
}
export interface DeleteTagsInput {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface DeleteTagsOutput {}
export interface DeleteTrialRequest {
  TrialName: string | undefined;
}
export interface DeleteTrialResponse {
  TrialArn?: string;
}
export interface DeleteTrialComponentRequest {
  TrialComponentName: string | undefined;
}
export interface DeleteTrialComponentResponse {
  TrialComponentArn?: string;
}
export interface DeleteUserProfileRequest {
  DomainId: string | undefined;
  UserProfileName: string | undefined;
}
export interface DeleteWorkforceRequest {
  WorkforceName: string | undefined;
}
export interface DeleteWorkforceResponse {}
export interface DeleteWorkteamRequest {
  WorkteamName: string | undefined;
}
export interface DeleteWorkteamResponse {
  Success: boolean | undefined;
}
export interface DeployedImage {
  SpecifiedImage?: string;
  ResolvedImage?: string;
  ResolutionTime?: Date;
}
export interface RealTimeInferenceRecommendation {
  RecommendationId: string | undefined;
  InstanceType: ProductionVariantInstanceType | undefined;
  Environment?: Record<string, string>;
}
export declare const RecommendationStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly NOT_APPLICABLE: "NOT_APPLICABLE";
};
export type RecommendationStatus =
  (typeof RecommendationStatus)[keyof typeof RecommendationStatus];
export interface DeploymentRecommendation {
  RecommendationStatus: RecommendationStatus | undefined;
  RealTimeInferenceRecommendations?: RealTimeInferenceRecommendation[];
}
export declare const StageStatus: {
  readonly Creating: "CREATING";
  readonly Deployed: "DEPLOYED";
  readonly Failed: "FAILED";
  readonly InProgress: "INPROGRESS";
  readonly ReadyToDeploy: "READYTODEPLOY";
  readonly Starting: "STARTING";
  readonly Stopped: "STOPPED";
  readonly Stopping: "STOPPING";
};
export type StageStatus = (typeof StageStatus)[keyof typeof StageStatus];
export interface EdgeDeploymentStatus {
  StageStatus: StageStatus | undefined;
  EdgeDeploymentSuccessInStage: number | undefined;
  EdgeDeploymentPendingInStage: number | undefined;
  EdgeDeploymentFailedInStage: number | undefined;
  EdgeDeploymentStatusMessage?: string;
  EdgeDeploymentStageStartTime?: Date;
}
export interface DeploymentStageStatusSummary {
  StageName: string | undefined;
  DeviceSelectionConfig: DeviceSelectionConfig | undefined;
  DeploymentConfig: EdgeDeploymentConfig | undefined;
  DeploymentStatus: EdgeDeploymentStatus | undefined;
}
export interface DeregisterDevicesRequest {
  DeviceFleetName: string | undefined;
  DeviceNames: string[] | undefined;
}
export interface DerivedInformation {
  DerivedDataInputConfig?: string;
}
export interface DescribeActionRequest {
  ActionName: string | undefined;
}
export interface DescribeActionResponse {
  ActionName?: string;
  ActionArn?: string;
  Source?: ActionSource;
  ActionType?: string;
  Description?: string;
  Status?: ActionStatus;
  Properties?: Record<string, string>;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
  MetadataProperties?: MetadataProperties;
  LineageGroupArn?: string;
}
export interface DescribeAlgorithmInput {
  AlgorithmName: string | undefined;
}
export interface DescribeAlgorithmOutput {
  AlgorithmName: string | undefined;
  AlgorithmArn: string | undefined;
  AlgorithmDescription?: string;
  CreationTime: Date | undefined;
  TrainingSpecification: TrainingSpecification | undefined;
  InferenceSpecification?: InferenceSpecification;
  ValidationSpecification?: AlgorithmValidationSpecification;
  AlgorithmStatus: AlgorithmStatus | undefined;
  AlgorithmStatusDetails: AlgorithmStatusDetails | undefined;
  ProductId?: string;
  CertifyForMarketplace?: boolean;
}
export interface DescribeAppRequest {
  DomainId: string | undefined;
  UserProfileName?: string;
  SpaceName?: string;
  AppType: AppType | undefined;
  AppName: string | undefined;
}
export interface DescribeAppResponse {
  AppArn?: string;
  AppType?: AppType;
  AppName?: string;
  DomainId?: string;
  UserProfileName?: string;
  SpaceName?: string;
  Status?: AppStatus;
  LastHealthCheckTimestamp?: Date;
  LastUserActivityTimestamp?: Date;
  CreationTime?: Date;
  FailureReason?: string;
  ResourceSpec?: ResourceSpec;
}
export interface DescribeAppImageConfigRequest {
  AppImageConfigName: string | undefined;
}
export interface DescribeAppImageConfigResponse {
  AppImageConfigArn?: string;
  AppImageConfigName?: string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
  KernelGatewayImageConfig?: KernelGatewayImageConfig;
  JupyterLabAppImageConfig?: JupyterLabAppImageConfig;
  CodeEditorAppImageConfig?: CodeEditorAppImageConfig;
}
export interface DescribeArtifactRequest {
  ArtifactArn: string | undefined;
}
export interface DescribeArtifactResponse {
  ArtifactName?: string;
  ArtifactArn?: string;
  Source?: ArtifactSource;
  ArtifactType?: string;
  Properties?: Record<string, string>;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
  MetadataProperties?: MetadataProperties;
  LineageGroupArn?: string;
}
export interface DescribeAutoMLJobRequest {
  AutoMLJobName: string | undefined;
}
export interface ModelDeployResult {
  EndpointName?: string;
}
export interface ResolvedAttributes {
  AutoMLJobObjective?: AutoMLJobObjective;
  ProblemType?: ProblemType;
  CompletionCriteria?: AutoMLJobCompletionCriteria;
}
export interface DescribeAutoMLJobResponse {
  AutoMLJobName: string | undefined;
  AutoMLJobArn: string | undefined;
  InputDataConfig: AutoMLChannel[] | undefined;
  OutputDataConfig: AutoMLOutputDataConfig | undefined;
  RoleArn: string | undefined;
  AutoMLJobObjective?: AutoMLJobObjective;
  ProblemType?: ProblemType;
  AutoMLJobConfig?: AutoMLJobConfig;
  CreationTime: Date | undefined;
  EndTime?: Date;
  LastModifiedTime: Date | undefined;
  FailureReason?: string;
  PartialFailureReasons?: AutoMLPartialFailureReason[];
  BestCandidate?: AutoMLCandidate;
  AutoMLJobStatus: AutoMLJobStatus | undefined;
  AutoMLJobSecondaryStatus: AutoMLJobSecondaryStatus | undefined;
  GenerateCandidateDefinitionsOnly?: boolean;
  AutoMLJobArtifacts?: AutoMLJobArtifacts;
  ResolvedAttributes?: ResolvedAttributes;
  ModelDeployConfig?: ModelDeployConfig;
  ModelDeployResult?: ModelDeployResult;
}
export interface DescribeAutoMLJobV2Request {
  AutoMLJobName: string | undefined;
}
export interface DescribeAutoMLJobV2Response {
  AutoMLJobName: string | undefined;
  AutoMLJobArn: string | undefined;
  AutoMLJobInputDataConfig: AutoMLJobChannel[] | undefined;
  OutputDataConfig: AutoMLOutputDataConfig | undefined;
  RoleArn: string | undefined;
  AutoMLJobObjective?: AutoMLJobObjective;
  AutoMLProblemTypeConfig?: AutoMLProblemTypeConfig;
  AutoMLProblemTypeConfigName?: AutoMLProblemTypeConfigName;
  CreationTime: Date | undefined;
  EndTime?: Date;
  LastModifiedTime: Date | undefined;
  FailureReason?: string;
  PartialFailureReasons?: AutoMLPartialFailureReason[];
  BestCandidate?: AutoMLCandidate;
  AutoMLJobStatus: AutoMLJobStatus | undefined;
  AutoMLJobSecondaryStatus: AutoMLJobSecondaryStatus | undefined;
  AutoMLJobArtifacts?: AutoMLJobArtifacts;
  ResolvedAttributes?: AutoMLResolvedAttributes;
  ModelDeployConfig?: ModelDeployConfig;
  ModelDeployResult?: ModelDeployResult;
  DataSplitConfig?: AutoMLDataSplitConfig;
  SecurityConfig?: AutoMLSecurityConfig;
  AutoMLComputeConfig?: AutoMLComputeConfig;
}
export interface DescribeClusterRequest {
  ClusterName: string | undefined;
}
export interface DescribeClusterResponse {
  ClusterArn: string | undefined;
  ClusterName?: string;
  ClusterStatus: ClusterStatus | undefined;
  CreationTime?: Date;
  FailureMessage?: string;
  InstanceGroups: ClusterInstanceGroupDetails[] | undefined;
  VpcConfig?: VpcConfig;
}
export interface DescribeClusterNodeRequest {
  ClusterName: string | undefined;
  NodeId: string | undefined;
}
export interface DescribeClusterNodeResponse {
  NodeDetails: ClusterNodeDetails | undefined;
}
export interface DescribeCodeRepositoryInput {
  CodeRepositoryName: string | undefined;
}
export interface DescribeCodeRepositoryOutput {
  CodeRepositoryName: string | undefined;
  CodeRepositoryArn: string | undefined;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  GitConfig?: GitConfig;
}
export interface DescribeCompilationJobRequest {
  CompilationJobName: string | undefined;
}
export interface ModelArtifacts {
  S3ModelArtifacts: string | undefined;
}
export interface ModelDigests {
  ArtifactDigest?: string;
}
export interface DescribeCompilationJobResponse {
  CompilationJobName: string | undefined;
  CompilationJobArn: string | undefined;
  CompilationJobStatus: CompilationJobStatus | undefined;
  CompilationStartTime?: Date;
  CompilationEndTime?: Date;
  StoppingCondition: StoppingCondition | undefined;
  InferenceImage?: string;
  ModelPackageVersionArn?: string;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  FailureReason: string | undefined;
  ModelArtifacts: ModelArtifacts | undefined;
  ModelDigests?: ModelDigests;
  RoleArn: string | undefined;
  InputConfig: InputConfig | undefined;
  OutputConfig: OutputConfig | undefined;
  VpcConfig?: NeoVpcConfig;
  DerivedInformation?: DerivedInformation;
}
export interface DescribeContextRequest {
  ContextName: string | undefined;
}
export interface DescribeContextResponse {
  ContextName?: string;
  ContextArn?: string;
  Source?: ContextSource;
  ContextType?: string;
  Description?: string;
  Properties?: Record<string, string>;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
  LineageGroupArn?: string;
}
export interface DescribeDataQualityJobDefinitionRequest {
  JobDefinitionName: string | undefined;
}
export interface DescribeDataQualityJobDefinitionResponse {
  JobDefinitionArn: string | undefined;
  JobDefinitionName: string | undefined;
  CreationTime: Date | undefined;
  DataQualityBaselineConfig?: DataQualityBaselineConfig;
  DataQualityAppSpecification: DataQualityAppSpecification | undefined;
  DataQualityJobInput: DataQualityJobInput | undefined;
  DataQualityJobOutputConfig: MonitoringOutputConfig | undefined;
  JobResources: MonitoringResources | undefined;
  NetworkConfig?: MonitoringNetworkConfig;
  RoleArn: string | undefined;
  StoppingCondition?: MonitoringStoppingCondition;
}
export interface DescribeDeviceRequest {
  NextToken?: string;
  DeviceName: string | undefined;
  DeviceFleetName: string | undefined;
}
export interface EdgeModel {
  ModelName: string | undefined;
  ModelVersion: string | undefined;
  LatestSampleTime?: Date;
  LatestInference?: Date;
}
export interface DescribeDeviceResponse {
  DeviceArn?: string;
  DeviceName: string | undefined;
  Description?: string;
  DeviceFleetName: string | undefined;
  IotThingName?: string;
  RegistrationTime: Date | undefined;
  LatestHeartbeat?: Date;
  Models?: EdgeModel[];
  MaxModels?: number;
  NextToken?: string;
  AgentVersion?: string;
}
export interface DescribeDeviceFleetRequest {
  DeviceFleetName: string | undefined;
}
export interface DescribeDeviceFleetResponse {
  DeviceFleetName: string | undefined;
  DeviceFleetArn: string | undefined;
  OutputConfig: EdgeOutputConfig | undefined;
  Description?: string;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  RoleArn?: string;
  IotRoleAlias?: string;
}
export interface DescribeDomainRequest {
  DomainId: string | undefined;
}
export declare const DomainStatus: {
  readonly Delete_Failed: "Delete_Failed";
  readonly Deleting: "Deleting";
  readonly Failed: "Failed";
  readonly InService: "InService";
  readonly Pending: "Pending";
  readonly Update_Failed: "Update_Failed";
  readonly Updating: "Updating";
};
export type DomainStatus = (typeof DomainStatus)[keyof typeof DomainStatus];
export interface DescribeDomainResponse {
  DomainArn?: string;
  DomainId?: string;
  DomainName?: string;
  HomeEfsFileSystemId?: string;
  SingleSignOnManagedApplicationInstanceId?: string;
  SingleSignOnApplicationArn?: string;
  Status?: DomainStatus;
  CreationTime?: Date;
  LastModifiedTime?: Date;
  FailureReason?: string;
  SecurityGroupIdForDomainBoundary?: string;
  AuthMode?: AuthMode;
  DefaultUserSettings?: UserSettings;
  DomainSettings?: DomainSettings;
  AppNetworkAccessType?: AppNetworkAccessType;
  HomeEfsFileSystemKmsKeyId?: string;
  SubnetIds?: string[];
  Url?: string;
  VpcId?: string;
  KmsKeyId?: string;
  AppSecurityGroupManagement?: AppSecurityGroupManagement;
  DefaultSpaceSettings?: DefaultSpaceSettings;
}
export interface DescribeEdgeDeploymentPlanRequest {
  EdgeDeploymentPlanName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeEdgeDeploymentPlanResponse {
  EdgeDeploymentPlanArn: string | undefined;
  EdgeDeploymentPlanName: string | undefined;
  ModelConfigs: EdgeDeploymentModelConfig[] | undefined;
  DeviceFleetName: string | undefined;
  EdgeDeploymentSuccess?: number;
  EdgeDeploymentPending?: number;
  EdgeDeploymentFailed?: number;
  Stages: DeploymentStageStatusSummary[] | undefined;
  NextToken?: string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
}
export interface DescribeEdgePackagingJobRequest {
  EdgePackagingJobName: string | undefined;
}
export declare const EdgePackagingJobStatus: {
  readonly Completed: "COMPLETED";
  readonly Failed: "FAILED";
  readonly InProgress: "INPROGRESS";
  readonly Starting: "STARTING";
  readonly Stopped: "STOPPED";
  readonly Stopping: "STOPPING";
};
export type EdgePackagingJobStatus =
  (typeof EdgePackagingJobStatus)[keyof typeof EdgePackagingJobStatus];
export declare const EdgePresetDeploymentStatus: {
  readonly Completed: "COMPLETED";
  readonly Failed: "FAILED";
};
export type EdgePresetDeploymentStatus =
  (typeof EdgePresetDeploymentStatus)[keyof typeof EdgePresetDeploymentStatus];
export interface EdgePresetDeploymentOutput {
  Type: EdgePresetDeploymentType | undefined;
  Artifact?: string;
  Status?: EdgePresetDeploymentStatus;
  StatusMessage?: string;
}
export interface DescribeEdgePackagingJobResponse {
  EdgePackagingJobArn: string | undefined;
  EdgePackagingJobName: string | undefined;
  CompilationJobName?: string;
  ModelName?: string;
  ModelVersion?: string;
  RoleArn?: string;
  OutputConfig?: EdgeOutputConfig;
  ResourceKey?: string;
  EdgePackagingJobStatus: EdgePackagingJobStatus | undefined;
  EdgePackagingJobStatusMessage?: string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
  ModelArtifact?: string;
  ModelSignature?: string;
  PresetDeploymentOutput?: EdgePresetDeploymentOutput;
}
export interface DescribeEndpointInput {
  EndpointName: string | undefined;
}
export declare const EndpointStatus: {
  readonly CREATING: "Creating";
  readonly DELETING: "Deleting";
  readonly FAILED: "Failed";
  readonly IN_SERVICE: "InService";
  readonly OUT_OF_SERVICE: "OutOfService";
  readonly ROLLING_BACK: "RollingBack";
  readonly SYSTEM_UPDATING: "SystemUpdating";
  readonly UPDATE_ROLLBACK_FAILED: "UpdateRollbackFailed";
  readonly UPDATING: "Updating";
};
export type EndpointStatus =
  (typeof EndpointStatus)[keyof typeof EndpointStatus];
export declare const VariantStatus: {
  readonly ACTIVATING_TRAFFIC: "ActivatingTraffic";
  readonly BAKING: "Baking";
  readonly CREATING: "Creating";
  readonly DELETING: "Deleting";
  readonly UPDATING: "Updating";
};
export type VariantStatus = (typeof VariantStatus)[keyof typeof VariantStatus];
export interface ProductionVariantStatus {
  Status: VariantStatus | undefined;
  StatusMessage?: string;
  StartTime?: Date;
}
export interface PendingProductionVariantSummary {
  VariantName: string | undefined;
  DeployedImages?: DeployedImage[];
  CurrentWeight?: number;
  DesiredWeight?: number;
  CurrentInstanceCount?: number;
  DesiredInstanceCount?: number;
  InstanceType?: ProductionVariantInstanceType;
  AcceleratorType?: ProductionVariantAcceleratorType;
  VariantStatus?: ProductionVariantStatus[];
  CurrentServerlessConfig?: ProductionVariantServerlessConfig;
  DesiredServerlessConfig?: ProductionVariantServerlessConfig;
  ManagedInstanceScaling?: ProductionVariantManagedInstanceScaling;
  RoutingConfig?: ProductionVariantRoutingConfig;
}
export interface PendingDeploymentSummary {
  EndpointConfigName: string | undefined;
  ProductionVariants?: PendingProductionVariantSummary[];
  StartTime?: Date;
  ShadowProductionVariants?: PendingProductionVariantSummary[];
}
export interface ProductionVariantSummary {
  VariantName: string | undefined;
  DeployedImages?: DeployedImage[];
  CurrentWeight?: number;
  DesiredWeight?: number;
  CurrentInstanceCount?: number;
  DesiredInstanceCount?: number;
  VariantStatus?: ProductionVariantStatus[];
  CurrentServerlessConfig?: ProductionVariantServerlessConfig;
  DesiredServerlessConfig?: ProductionVariantServerlessConfig;
  ManagedInstanceScaling?: ProductionVariantManagedInstanceScaling;
  RoutingConfig?: ProductionVariantRoutingConfig;
}
export interface DescribeEndpointOutput {
  EndpointName: string | undefined;
  EndpointArn: string | undefined;
  EndpointConfigName?: string;
  ProductionVariants?: ProductionVariantSummary[];
  DataCaptureConfig?: DataCaptureConfigSummary;
  EndpointStatus: EndpointStatus | undefined;
  FailureReason?: string;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  LastDeploymentConfig?: DeploymentConfig;
  AsyncInferenceConfig?: AsyncInferenceConfig;
  PendingDeploymentSummary?: PendingDeploymentSummary;
  ExplainerConfig?: ExplainerConfig;
  ShadowProductionVariants?: ProductionVariantSummary[];
}
export interface DescribeEndpointConfigInput {
  EndpointConfigName: string | undefined;
}
export interface DescribeEndpointConfigOutput {
  EndpointConfigName: string | undefined;
  EndpointConfigArn: string | undefined;
  ProductionVariants: ProductionVariant[] | undefined;
  DataCaptureConfig?: DataCaptureConfig;
  KmsKeyId?: string;
  CreationTime: Date | undefined;
  AsyncInferenceConfig?: AsyncInferenceConfig;
  ExplainerConfig?: ExplainerConfig;
  ShadowProductionVariants?: ProductionVariant[];
  ExecutionRoleArn?: string;
  VpcConfig?: VpcConfig;
  EnableNetworkIsolation?: boolean;
}
export interface DescribeExperimentRequest {
  ExperimentName: string | undefined;
}
export interface ExperimentSource {
  SourceArn: string | undefined;
  SourceType?: string;
}
export interface DescribeExperimentResponse {
  ExperimentName?: string;
  ExperimentArn?: string;
  DisplayName?: string;
  Source?: ExperimentSource;
  Description?: string;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
}
export interface DescribeFeatureGroupRequest {
  FeatureGroupName: string | undefined;
  NextToken?: string;
}
export declare const FeatureGroupStatus: {
  readonly CREATED: "Created";
  readonly CREATE_FAILED: "CreateFailed";
  readonly CREATING: "Creating";
  readonly DELETE_FAILED: "DeleteFailed";
  readonly DELETING: "Deleting";
};
export type FeatureGroupStatus =
  (typeof FeatureGroupStatus)[keyof typeof FeatureGroupStatus];
export declare const LastUpdateStatusValue: {
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly SUCCESSFUL: "Successful";
};
export type LastUpdateStatusValue =
  (typeof LastUpdateStatusValue)[keyof typeof LastUpdateStatusValue];
export interface LastUpdateStatus {
  Status: LastUpdateStatusValue | undefined;
  FailureReason?: string;
}
export declare const OfflineStoreStatusValue: {
  readonly ACTIVE: "Active";
  readonly BLOCKED: "Blocked";
  readonly DISABLED: "Disabled";
};
export type OfflineStoreStatusValue =
  (typeof OfflineStoreStatusValue)[keyof typeof OfflineStoreStatusValue];
export interface OfflineStoreStatus {
  Status: OfflineStoreStatusValue | undefined;
  BlockedReason?: string;
}
export interface ThroughputConfigDescription {
  ThroughputMode: ThroughputMode | undefined;
  ProvisionedReadCapacityUnits?: number;
  ProvisionedWriteCapacityUnits?: number;
}
export interface DescribeFeatureGroupResponse {
  FeatureGroupArn: string | undefined;
  FeatureGroupName: string | undefined;
  RecordIdentifierFeatureName: string | undefined;
  EventTimeFeatureName: string | undefined;
  FeatureDefinitions: FeatureDefinition[] | undefined;
  CreationTime: Date | undefined;
  LastModifiedTime?: Date;
  OnlineStoreConfig?: OnlineStoreConfig;
  OfflineStoreConfig?: OfflineStoreConfig;
  ThroughputConfig?: ThroughputConfigDescription;
  RoleArn?: string;
  FeatureGroupStatus?: FeatureGroupStatus;
  OfflineStoreStatus?: OfflineStoreStatus;
  LastUpdateStatus?: LastUpdateStatus;
  FailureReason?: string;
  Description?: string;
  NextToken: string | undefined;
  OnlineStoreTotalSizeBytes?: number;
}
export interface DescribeFeatureMetadataRequest {
  FeatureGroupName: string | undefined;
  FeatureName: string | undefined;
}
export interface FeatureParameter {
  Key?: string;
  Value?: string;
}
export interface DescribeFeatureMetadataResponse {
  FeatureGroupArn: string | undefined;
  FeatureGroupName: string | undefined;
  FeatureName: string | undefined;
  FeatureType: FeatureType | undefined;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  Description?: string;
  Parameters?: FeatureParameter[];
}
export interface DescribeFlowDefinitionRequest {
  FlowDefinitionName: string | undefined;
}
export declare const FlowDefinitionStatus: {
  readonly ACTIVE: "Active";
  readonly DELETING: "Deleting";
  readonly FAILED: "Failed";
  readonly INITIALIZING: "Initializing";
};
export type FlowDefinitionStatus =
  (typeof FlowDefinitionStatus)[keyof typeof FlowDefinitionStatus];
export interface DescribeFlowDefinitionResponse {
  FlowDefinitionArn: string | undefined;
  FlowDefinitionName: string | undefined;
  FlowDefinitionStatus: FlowDefinitionStatus | undefined;
  CreationTime: Date | undefined;
  HumanLoopRequestSource?: HumanLoopRequestSource;
  HumanLoopActivationConfig?: HumanLoopActivationConfig;
  HumanLoopConfig?: HumanLoopConfig;
  OutputConfig: FlowDefinitionOutputConfig | undefined;
  RoleArn: string | undefined;
  FailureReason?: string;
}
export interface DescribeHubRequest {
  HubName: string | undefined;
}
export declare const HubStatus: {
  readonly CREATE_FAILED: "CreateFailed";
  readonly CREATING: "Creating";
  readonly DELETE_FAILED: "DeleteFailed";
  readonly DELETING: "Deleting";
  readonly IN_SERVICE: "InService";
  readonly UPDATE_FAILED: "UpdateFailed";
  readonly UPDATING: "Updating";
};
export type HubStatus = (typeof HubStatus)[keyof typeof HubStatus];
export interface DescribeHubResponse {
  HubName: string | undefined;
  HubArn: string | undefined;
  HubDisplayName?: string;
  HubDescription?: string;
  HubSearchKeywords?: string[];
  S3StorageConfig?: HubS3StorageConfig;
  HubStatus: HubStatus | undefined;
  FailureReason?: string;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
}
export interface DescribeHubContentRequest {
  HubName: string | undefined;
  HubContentType: HubContentType | undefined;
  HubContentName: string | undefined;
  HubContentVersion?: string;
}
export interface HubContentDependency {
  DependencyOriginPath?: string;
  DependencyCopyPath?: string;
}
export declare const HubContentStatus: {
  readonly AVAILABLE: "Available";
  readonly DELETE_FAILED: "DeleteFailed";
  readonly DELETING: "Deleting";
  readonly IMPORTING: "Importing";
  readonly IMPORT_FAILED: "ImportFailed";
};
export type HubContentStatus =
  (typeof HubContentStatus)[keyof typeof HubContentStatus];
export declare const HubContentSupportStatus: {
  readonly DEPRECATED: "Deprecated";
  readonly SUPPORTED: "Supported";
};
export type HubContentSupportStatus =
  (typeof HubContentSupportStatus)[keyof typeof HubContentSupportStatus];
export interface DescribeHubContentResponse {
  HubContentName: string | undefined;
  HubContentArn: string | undefined;
  HubContentVersion: string | undefined;
  HubContentType: HubContentType | undefined;
  DocumentSchemaVersion: string | undefined;
  HubName: string | undefined;
  HubArn: string | undefined;
  HubContentDisplayName?: string;
  HubContentDescription?: string;
  HubContentMarkdown?: string;
  HubContentDocument: string | undefined;
  SageMakerPublicHubContentArn?: string;
  ReferenceMinVersion?: string;
  SupportStatus?: HubContentSupportStatus;
  HubContentSearchKeywords?: string[];
  HubContentDependencies?: HubContentDependency[];
  HubContentStatus: HubContentStatus | undefined;
  FailureReason?: string;
  CreationTime: Date | undefined;
}
export interface DescribeHumanTaskUiRequest {
  HumanTaskUiName: string | undefined;
}
export declare const HumanTaskUiStatus: {
  readonly ACTIVE: "Active";
  readonly DELETING: "Deleting";
};
export type HumanTaskUiStatus =
  (typeof HumanTaskUiStatus)[keyof typeof HumanTaskUiStatus];
export interface UiTemplateInfo {
  Url?: string;
  ContentSha256?: string;
}
export interface DescribeHumanTaskUiResponse {
  HumanTaskUiArn: string | undefined;
  HumanTaskUiName: string | undefined;
  HumanTaskUiStatus?: HumanTaskUiStatus;
  CreationTime: Date | undefined;
  UiTemplate: UiTemplateInfo | undefined;
}
export interface DescribeHyperParameterTuningJobRequest {
  HyperParameterTuningJobName: string | undefined;
}
export interface FinalHyperParameterTuningJobObjectiveMetric {
  Type?: HyperParameterTuningJobObjectiveType;
  MetricName: string | undefined;
  Value: number | undefined;
}
export declare const TrainingJobStatus: {
  readonly COMPLETED: "Completed";
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly STOPPED: "Stopped";
  readonly STOPPING: "Stopping";
};
export type TrainingJobStatus =
  (typeof TrainingJobStatus)[keyof typeof TrainingJobStatus];
export interface HyperParameterTrainingJobSummary {
  TrainingJobDefinitionName?: string;
  TrainingJobName: string | undefined;
  TrainingJobArn: string | undefined;
  TuningJobName?: string;
  CreationTime: Date | undefined;
  TrainingStartTime?: Date;
  TrainingEndTime?: Date;
  TrainingJobStatus: TrainingJobStatus | undefined;
  TunedHyperParameters: Record<string, string> | undefined;
  FailureReason?: string;
  FinalHyperParameterTuningJobObjectiveMetric?: FinalHyperParameterTuningJobObjectiveMetric;
  ObjectiveStatus?: ObjectiveStatus;
}
export interface HyperParameterTuningJobConsumedResources {
  RuntimeInSeconds?: number;
}
export declare const HyperParameterTuningJobStatus: {
  readonly COMPLETED: "Completed";
  readonly DELETE_FAILED: "DeleteFailed";
  readonly DELETING: "Deleting";
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly STOPPED: "Stopped";
  readonly STOPPING: "Stopping";
};
export type HyperParameterTuningJobStatus =
  (typeof HyperParameterTuningJobStatus)[keyof typeof HyperParameterTuningJobStatus];
export interface ObjectiveStatusCounters {
  Succeeded?: number;
  Pending?: number;
  Failed?: number;
}
export interface TrainingJobStatusCounters {
  Completed?: number;
  InProgress?: number;
  RetryableError?: number;
  NonRetryableError?: number;
  Stopped?: number;
}
export interface HyperParameterTuningJobCompletionDetails {
  NumberOfTrainingJobsObjectiveNotImproving?: number;
  ConvergenceDetectedTime?: Date;
}
export interface DescribeHyperParameterTuningJobResponse {
  HyperParameterTuningJobName: string | undefined;
  HyperParameterTuningJobArn: string | undefined;
  HyperParameterTuningJobConfig: HyperParameterTuningJobConfig | undefined;
  TrainingJobDefinition?: HyperParameterTrainingJobDefinition;
  TrainingJobDefinitions?: HyperParameterTrainingJobDefinition[];
  HyperParameterTuningJobStatus: HyperParameterTuningJobStatus | undefined;
  CreationTime: Date | undefined;
  HyperParameterTuningEndTime?: Date;
  LastModifiedTime?: Date;
  TrainingJobStatusCounters: TrainingJobStatusCounters | undefined;
  ObjectiveStatusCounters: ObjectiveStatusCounters | undefined;
  BestTrainingJob?: HyperParameterTrainingJobSummary;
  OverallBestTrainingJob?: HyperParameterTrainingJobSummary;
  WarmStartConfig?: HyperParameterTuningJobWarmStartConfig;
  Autotune?: Autotune;
  FailureReason?: string;
  TuningJobCompletionDetails?: HyperParameterTuningJobCompletionDetails;
  ConsumedResources?: HyperParameterTuningJobConsumedResources;
}
export interface DescribeImageRequest {
  ImageName: string | undefined;
}
export declare const ImageStatus: {
  readonly CREATED: "CREATED";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATING: "CREATING";
  readonly DELETE_FAILED: "DELETE_FAILED";
  readonly DELETING: "DELETING";
  readonly UPDATE_FAILED: "UPDATE_FAILED";
  readonly UPDATING: "UPDATING";
};
export type ImageStatus = (typeof ImageStatus)[keyof typeof ImageStatus];
export interface DescribeImageResponse {
  CreationTime?: Date;
  Description?: string;
  DisplayName?: string;
  FailureReason?: string;
  ImageArn?: string;
  ImageName?: string;
  ImageStatus?: ImageStatus;
  LastModifiedTime?: Date;
  RoleArn?: string;
}
export interface DescribeImageVersionRequest {
  ImageName: string | undefined;
  Version?: number;
  Alias?: string;
}
export declare const ImageVersionStatus: {
  readonly CREATED: "CREATED";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATING: "CREATING";
  readonly DELETE_FAILED: "DELETE_FAILED";
  readonly DELETING: "DELETING";
};
export type ImageVersionStatus =
  (typeof ImageVersionStatus)[keyof typeof ImageVersionStatus];
export interface DescribeImageVersionResponse {
  BaseImage?: string;
  ContainerImage?: string;
  CreationTime?: Date;
  FailureReason?: string;
  ImageArn?: string;
  ImageVersionArn?: string;
  ImageVersionStatus?: ImageVersionStatus;
  LastModifiedTime?: Date;
  Version?: number;
  VendorGuidance?: VendorGuidance;
  JobType?: JobType;
  MLFramework?: string;
  ProgrammingLang?: string;
  Processor?: Processor;
  Horovod?: boolean;
  ReleaseNotes?: string;
}
export interface DescribeInferenceComponentInput {
  InferenceComponentName: string | undefined;
}
export declare const InferenceComponentStatus: {
  readonly CREATING: "Creating";
  readonly DELETING: "Deleting";
  readonly FAILED: "Failed";
  readonly IN_SERVICE: "InService";
  readonly UPDATING: "Updating";
};
export type InferenceComponentStatus =
  (typeof InferenceComponentStatus)[keyof typeof InferenceComponentStatus];
export interface InferenceComponentRuntimeConfigSummary {
  DesiredCopyCount?: number;
  CurrentCopyCount?: number;
}
export interface InferenceComponentContainerSpecificationSummary {
  DeployedImage?: DeployedImage;
  ArtifactUrl?: string;
  Environment?: Record<string, string>;
}
export interface InferenceComponentSpecificationSummary {
  ModelName?: string;
  Container?: InferenceComponentContainerSpecificationSummary;
  StartupParameters?: InferenceComponentStartupParameters;
  ComputeResourceRequirements?: InferenceComponentComputeResourceRequirements;
}
export interface DescribeInferenceComponentOutput {
  InferenceComponentName: string | undefined;
  InferenceComponentArn: string | undefined;
  EndpointName: string | undefined;
  EndpointArn: string | undefined;
  VariantName?: string;
  FailureReason?: string;
  Specification?: InferenceComponentSpecificationSummary;
  RuntimeConfig?: InferenceComponentRuntimeConfigSummary;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  InferenceComponentStatus?: InferenceComponentStatus;
}
export interface DescribeInferenceExperimentRequest {
  Name: string | undefined;
}
export interface EndpointMetadata {
  EndpointName: string | undefined;
  EndpointConfigName?: string;
  EndpointStatus?: EndpointStatus;
  FailureReason?: string;
}
export declare const ModelVariantStatus: {
  readonly CREATING: "Creating";
  readonly DELETED: "Deleted";
  readonly DELETING: "Deleting";
  readonly IN_SERVICE: "InService";
  readonly UPDATING: "Updating";
};
export type ModelVariantStatus =
  (typeof ModelVariantStatus)[keyof typeof ModelVariantStatus];
export interface ModelVariantConfigSummary {
  ModelName: string | undefined;
  VariantName: string | undefined;
  InfrastructureConfig: ModelInfrastructureConfig | undefined;
  Status: ModelVariantStatus | undefined;
}
export declare const InferenceExperimentStatus: {
  readonly CANCELLED: "Cancelled";
  readonly COMPLETED: "Completed";
  readonly CREATED: "Created";
  readonly CREATING: "Creating";
  readonly RUNNING: "Running";
  readonly STARTING: "Starting";
  readonly STOPPING: "Stopping";
  readonly UPDATING: "Updating";
};
export type InferenceExperimentStatus =
  (typeof InferenceExperimentStatus)[keyof typeof InferenceExperimentStatus];
export interface DescribeInferenceExperimentResponse {
  Arn: string | undefined;
  Name: string | undefined;
  Type: InferenceExperimentType | undefined;
  Schedule?: InferenceExperimentSchedule;
  Status: InferenceExperimentStatus | undefined;
  StatusReason?: string;
  Description?: string;
  CreationTime?: Date;
  CompletionTime?: Date;
  LastModifiedTime?: Date;
  RoleArn?: string;
  EndpointMetadata: EndpointMetadata | undefined;
  ModelVariants: ModelVariantConfigSummary[] | undefined;
  DataStorageConfig?: InferenceExperimentDataStorageConfig;
  ShadowModeConfig?: ShadowModeConfig;
  KmsKey?: string;
}
export interface DescribeInferenceRecommendationsJobRequest {
  JobName: string | undefined;
}
export interface InferenceMetrics {
  MaxInvocations: number | undefined;
  ModelLatency: number | undefined;
}
export interface EndpointPerformance {
  Metrics: InferenceMetrics | undefined;
  EndpointInfo: EndpointInfo | undefined;
}
export interface EndpointOutputConfiguration {
  EndpointName: string | undefined;
  VariantName: string | undefined;
  InstanceType?: ProductionVariantInstanceType;
  InitialInstanceCount?: number;
  ServerlessConfig?: ProductionVariantServerlessConfig;
}
export interface RecommendationMetrics {
  CostPerHour?: number;
  CostPerInference?: number;
  MaxInvocations?: number;
  ModelLatency?: number;
  CpuUtilization?: number;
  MemoryUtilization?: number;
  ModelSetupTime?: number;
}
export interface EnvironmentParameter {
  Key: string | undefined;
  ValueType: string | undefined;
  Value: string | undefined;
}
export interface ModelConfiguration {
  InferenceSpecificationName?: string;
  EnvironmentParameters?: EnvironmentParameter[];
  CompilationJobName?: string;
}
export interface InferenceRecommendation {
  RecommendationId?: string;
  Metrics?: RecommendationMetrics;
  EndpointConfiguration: EndpointOutputConfiguration | undefined;
  ModelConfiguration: ModelConfiguration | undefined;
  InvocationEndTime?: Date;
  InvocationStartTime?: Date;
}
export declare const RecommendationJobStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PENDING: "PENDING";
  readonly STOPPED: "STOPPED";
  readonly STOPPING: "STOPPING";
};
export type RecommendationJobStatus =
  (typeof RecommendationJobStatus)[keyof typeof RecommendationJobStatus];
export interface DescribeInferenceRecommendationsJobResponse {
  JobName: string | undefined;
  JobDescription?: string;
  JobType: RecommendationJobType | undefined;
  JobArn: string | undefined;
  RoleArn: string | undefined;
  Status: RecommendationJobStatus | undefined;
  CreationTime: Date | undefined;
  CompletionTime?: Date;
  LastModifiedTime: Date | undefined;
  FailureReason?: string;
  InputConfig: RecommendationJobInputConfig | undefined;
  StoppingConditions?: RecommendationJobStoppingConditions;
  InferenceRecommendations?: InferenceRecommendation[];
  EndpointPerformances?: EndpointPerformance[];
}
export interface DescribeLabelingJobRequest {
  LabelingJobName: string | undefined;
}
export interface LabelCounters {
  TotalLabeled?: number;
  HumanLabeled?: number;
  MachineLabeled?: number;
  FailedNonRetryableError?: number;
  Unlabeled?: number;
}
export interface LabelingJobOutput {
  OutputDatasetS3Uri: string | undefined;
  FinalActiveLearningModelArn?: string;
}
export declare const LabelingJobStatus: {
  readonly COMPLETED: "Completed";
  readonly FAILED: "Failed";
  readonly INITIALIZING: "Initializing";
  readonly IN_PROGRESS: "InProgress";
  readonly STOPPED: "Stopped";
  readonly STOPPING: "Stopping";
};
export type LabelingJobStatus =
  (typeof LabelingJobStatus)[keyof typeof LabelingJobStatus];
export interface DescribeLabelingJobResponse {
  LabelingJobStatus: LabelingJobStatus | undefined;
  LabelCounters: LabelCounters | undefined;
  FailureReason?: string;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  JobReferenceCode: string | undefined;
  LabelingJobName: string | undefined;
  LabelingJobArn: string | undefined;
  LabelAttributeName?: string;
  InputConfig: LabelingJobInputConfig | undefined;
  OutputConfig: LabelingJobOutputConfig | undefined;
  RoleArn: string | undefined;
  LabelCategoryConfigS3Uri?: string;
  StoppingConditions?: LabelingJobStoppingConditions;
  LabelingJobAlgorithmsConfig?: LabelingJobAlgorithmsConfig;
  HumanTaskConfig: HumanTaskConfig | undefined;
  Tags?: Tag[];
  LabelingJobOutput?: LabelingJobOutput;
}
export interface DescribeLineageGroupRequest {
  LineageGroupName: string | undefined;
}
export interface DescribeLineageGroupResponse {
  LineageGroupName?: string;
  LineageGroupArn?: string;
  DisplayName?: string;
  Description?: string;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
}
export interface DescribeMlflowTrackingServerRequest {
  TrackingServerName: string | undefined;
}
export declare const IsTrackingServerActive: {
  readonly ACTIVE: "Active";
  readonly INACTIVE: "Inactive";
};
export type IsTrackingServerActive =
  (typeof IsTrackingServerActive)[keyof typeof IsTrackingServerActive];
export declare const TrackingServerStatus: {
  readonly CREATED: "Created";
  readonly CREATE_FAILED: "CreateFailed";
  readonly CREATING: "Creating";
  readonly DELETE_FAILED: "DeleteFailed";
  readonly DELETING: "Deleting";
  readonly MAINTENANCE_COMPLETE: "MaintenanceComplete";
  readonly MAINTENANCE_FAILED: "MaintenanceFailed";
  readonly MAINTENANCE_IN_PROGRESS: "MaintenanceInProgress";
  readonly STARTED: "Started";
  readonly STARTING: "Starting";
  readonly START_FAILED: "StartFailed";
  readonly STOPPED: "Stopped";
  readonly STOPPING: "Stopping";
  readonly STOP_FAILED: "StopFailed";
  readonly UPDATED: "Updated";
  readonly UPDATE_FAILED: "UpdateFailed";
  readonly UPDATING: "Updating";
};
export type TrackingServerStatus =
  (typeof TrackingServerStatus)[keyof typeof TrackingServerStatus];
export interface DescribeMlflowTrackingServerResponse {
  TrackingServerArn?: string;
  TrackingServerName?: string;
  ArtifactStoreUri?: string;
  TrackingServerSize?: TrackingServerSize;
  MlflowVersion?: string;
  RoleArn?: string;
  TrackingServerStatus?: TrackingServerStatus;
  IsActive?: IsTrackingServerActive;
  TrackingServerUrl?: string;
  WeeklyMaintenanceWindowStart?: string;
  AutomaticModelRegistration?: boolean;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
}
export interface DescribeModelInput {
  ModelName: string | undefined;
}
export interface DescribeModelOutput {
  ModelName: string | undefined;
  PrimaryContainer?: ContainerDefinition;
  Containers?: ContainerDefinition[];
  InferenceExecutionConfig?: InferenceExecutionConfig;
  ExecutionRoleArn?: string;
  VpcConfig?: VpcConfig;
  CreationTime: Date | undefined;
  ModelArn: string | undefined;
  EnableNetworkIsolation?: boolean;
  DeploymentRecommendation?: DeploymentRecommendation;
}
export interface DescribeModelBiasJobDefinitionRequest {
  JobDefinitionName: string | undefined;
}
export interface DescribeModelBiasJobDefinitionResponse {
  JobDefinitionArn: string | undefined;
  JobDefinitionName: string | undefined;
  CreationTime: Date | undefined;
  ModelBiasBaselineConfig?: ModelBiasBaselineConfig;
  ModelBiasAppSpecification: ModelBiasAppSpecification | undefined;
  ModelBiasJobInput: ModelBiasJobInput | undefined;
  ModelBiasJobOutputConfig: MonitoringOutputConfig | undefined;
  JobResources: MonitoringResources | undefined;
  NetworkConfig?: MonitoringNetworkConfig;
  RoleArn: string | undefined;
  StoppingCondition?: MonitoringStoppingCondition;
}
export interface DescribeModelCardRequest {
  ModelCardName: string | undefined;
  ModelCardVersion?: number;
}
export declare const ModelCardProcessingStatus: {
  readonly CONTENT_DELETED: "ContentDeleted";
  readonly DELETE_COMPLETED: "DeleteCompleted";
  readonly DELETE_FAILED: "DeleteFailed";
  readonly DELETE_INPROGRESS: "DeleteInProgress";
  readonly DELETE_PENDING: "DeletePending";
  readonly EXPORTJOBS_DELETED: "ExportJobsDeleted";
};
export type ModelCardProcessingStatus =
  (typeof ModelCardProcessingStatus)[keyof typeof ModelCardProcessingStatus];
export declare const OidcConfigFilterSensitiveLog: (obj: OidcConfig) => any;
export declare const CreateWorkforceRequestFilterSensitiveLog: (
  obj: CreateWorkforceRequest
) => any;
