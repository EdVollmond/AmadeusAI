import { LazyJsonString as __LazyJsonString } from "@smithy/smithy-client";
import {
  AdditionalInferenceSpecificationDefinition,
  AmazonQSettings,
  AnnotationConsolidationConfig,
  AppNetworkAccessType,
  AppSecurityGroupManagement,
  AppType,
  AsyncInferenceConfig,
  AuthMode,
  AutoMLComputeConfig,
  AutoMLDataSplitConfig,
  AutoMLJobChannel,
  AutoMLJobObjective,
  AutoMLOutputDataConfig,
  AutoMLProblemTypeConfig,
  AutoMLSecurityConfig,
  AutoParameter,
  AutoRollbackConfig,
  Autotune,
  AwsManagedHumanLoopRequestSource,
  BatchTransformInput,
  BestObjectiveNotImproving,
  Bias,
  BlueGreenUpdatePolicy,
  CanvasAppSettings,
  CapacitySize,
  CaptureContentTypeHeader,
  CaptureOption,
  CategoricalParameter,
  CategoricalParameterRange,
  Channel,
  CheckpointConfig,
  ClarifyExplainerConfig,
  ClusterInstanceGroupSpecification,
  CodeEditorAppSettings,
  CodeRepository,
  CollectionConfig,
  CollectionType,
  ContainerDefinition,
  ContentClassifier,
  ContextSource,
  ContinuousParameterRange,
  ConvergenceDetected,
  CustomImage,
  FeatureStatus,
  GitConfig,
  HyperParameterScalingType,
  HyperParameterTuningJobObjective,
  InferenceSpecification,
  MetadataProperties,
  MetricDefinition,
  MetricsSource,
  ModelApprovalStatus,
  ModelDataSource,
  ModelDeployConfig,
  OutputDataConfig,
  ProcessingS3DataDistributionType,
  ProcessingS3InputMode,
  ProductionVariantInstanceType,
  ResourceConfig,
  ResourceSpec,
  StoppingCondition,
  Tag,
  TargetDevice,
  TargetPlatformAccelerator,
  TargetPlatformArch,
  TargetPlatformOs,
  TrainingInputMode,
  TrainingInstanceType,
  TransformJobDefinition,
  VpcConfig,
} from "./models_0";
export interface CreateAutoMLJobV2Request {
  AutoMLJobName: string | undefined;
  AutoMLJobInputDataConfig: AutoMLJobChannel[] | undefined;
  OutputDataConfig: AutoMLOutputDataConfig | undefined;
  AutoMLProblemTypeConfig: AutoMLProblemTypeConfig | undefined;
  RoleArn: string | undefined;
  Tags?: Tag[];
  SecurityConfig?: AutoMLSecurityConfig;
  AutoMLJobObjective?: AutoMLJobObjective;
  ModelDeployConfig?: ModelDeployConfig;
  DataSplitConfig?: AutoMLDataSplitConfig;
  AutoMLComputeConfig?: AutoMLComputeConfig;
}
export interface CreateAutoMLJobV2Response {
  AutoMLJobArn: string | undefined;
}
export interface CreateClusterRequest {
  ClusterName: string | undefined;
  InstanceGroups: ClusterInstanceGroupSpecification[] | undefined;
  VpcConfig?: VpcConfig;
  Tags?: Tag[];
}
export interface CreateClusterResponse {
  ClusterArn: string | undefined;
}
export interface CreateCodeRepositoryInput {
  CodeRepositoryName: string | undefined;
  GitConfig: GitConfig | undefined;
  Tags?: Tag[];
}
export interface CreateCodeRepositoryOutput {
  CodeRepositoryArn: string | undefined;
}
export declare const Framework: {
  readonly DARKNET: "DARKNET";
  readonly KERAS: "KERAS";
  readonly MXNET: "MXNET";
  readonly ONNX: "ONNX";
  readonly PYTORCH: "PYTORCH";
  readonly SKLEARN: "SKLEARN";
  readonly TENSORFLOW: "TENSORFLOW";
  readonly TFLITE: "TFLITE";
  readonly XGBOOST: "XGBOOST";
};
export type Framework = (typeof Framework)[keyof typeof Framework];
export interface InputConfig {
  S3Uri: string | undefined;
  DataInputConfig?: string;
  Framework: Framework | undefined;
  FrameworkVersion?: string;
}
export interface TargetPlatform {
  Os: TargetPlatformOs | undefined;
  Arch: TargetPlatformArch | undefined;
  Accelerator?: TargetPlatformAccelerator;
}
export interface OutputConfig {
  S3OutputLocation: string | undefined;
  TargetDevice?: TargetDevice;
  TargetPlatform?: TargetPlatform;
  CompilerOptions?: string;
  KmsKeyId?: string;
}
export interface NeoVpcConfig {
  SecurityGroupIds: string[] | undefined;
  Subnets: string[] | undefined;
}
export interface CreateCompilationJobRequest {
  CompilationJobName: string | undefined;
  RoleArn: string | undefined;
  ModelPackageVersionArn?: string;
  InputConfig?: InputConfig;
  OutputConfig: OutputConfig | undefined;
  VpcConfig?: NeoVpcConfig;
  StoppingCondition: StoppingCondition | undefined;
  Tags?: Tag[];
}
export interface CreateCompilationJobResponse {
  CompilationJobArn: string | undefined;
}
export interface CreateContextRequest {
  ContextName: string | undefined;
  Source: ContextSource | undefined;
  ContextType: string | undefined;
  Description?: string;
  Properties?: Record<string, string>;
  Tags?: Tag[];
}
export interface CreateContextResponse {
  ContextArn?: string;
}
export interface DataQualityAppSpecification {
  ImageUri: string | undefined;
  ContainerEntrypoint?: string[];
  ContainerArguments?: string[];
  RecordPreprocessorSourceUri?: string;
  PostAnalyticsProcessorSourceUri?: string;
  Environment?: Record<string, string>;
}
export interface MonitoringConstraintsResource {
  S3Uri?: string;
}
export interface MonitoringStatisticsResource {
  S3Uri?: string;
}
export interface DataQualityBaselineConfig {
  BaseliningJobName?: string;
  ConstraintsResource?: MonitoringConstraintsResource;
  StatisticsResource?: MonitoringStatisticsResource;
}
export interface EndpointInput {
  EndpointName: string | undefined;
  LocalPath: string | undefined;
  S3InputMode?: ProcessingS3InputMode;
  S3DataDistributionType?: ProcessingS3DataDistributionType;
  FeaturesAttribute?: string;
  InferenceAttribute?: string;
  ProbabilityAttribute?: string;
  ProbabilityThresholdAttribute?: number;
  StartTimeOffset?: string;
  EndTimeOffset?: string;
  ExcludeFeaturesAttribute?: string;
}
export interface DataQualityJobInput {
  EndpointInput?: EndpointInput;
  BatchTransformInput?: BatchTransformInput;
}
export declare const ProcessingS3UploadMode: {
  readonly CONTINUOUS: "Continuous";
  readonly END_OF_JOB: "EndOfJob";
};
export type ProcessingS3UploadMode =
  (typeof ProcessingS3UploadMode)[keyof typeof ProcessingS3UploadMode];
export interface MonitoringS3Output {
  S3Uri: string | undefined;
  LocalPath: string | undefined;
  S3UploadMode?: ProcessingS3UploadMode;
}
export interface MonitoringOutput {
  S3Output: MonitoringS3Output | undefined;
}
export interface MonitoringOutputConfig {
  MonitoringOutputs: MonitoringOutput[] | undefined;
  KmsKeyId?: string;
}
export declare const ProcessingInstanceType: {
  readonly ML_C4_2XLARGE: "ml.c4.2xlarge";
  readonly ML_C4_4XLARGE: "ml.c4.4xlarge";
  readonly ML_C4_8XLARGE: "ml.c4.8xlarge";
  readonly ML_C4_XLARGE: "ml.c4.xlarge";
  readonly ML_C5_18XLARGE: "ml.c5.18xlarge";
  readonly ML_C5_2XLARGE: "ml.c5.2xlarge";
  readonly ML_C5_4XLARGE: "ml.c5.4xlarge";
  readonly ML_C5_9XLARGE: "ml.c5.9xlarge";
  readonly ML_C5_XLARGE: "ml.c5.xlarge";
  readonly ML_G4DN_12XLARGE: "ml.g4dn.12xlarge";
  readonly ML_G4DN_16XLARGE: "ml.g4dn.16xlarge";
  readonly ML_G4DN_2XLARGE: "ml.g4dn.2xlarge";
  readonly ML_G4DN_4XLARGE: "ml.g4dn.4xlarge";
  readonly ML_G4DN_8XLARGE: "ml.g4dn.8xlarge";
  readonly ML_G4DN_XLARGE: "ml.g4dn.xlarge";
  readonly ML_G5_12XLARGE: "ml.g5.12xlarge";
  readonly ML_G5_16XLARGE: "ml.g5.16xlarge";
  readonly ML_G5_24XLARGE: "ml.g5.24xlarge";
  readonly ML_G5_2XLARGE: "ml.g5.2xlarge";
  readonly ML_G5_48XLARGE: "ml.g5.48xlarge";
  readonly ML_G5_4XLARGE: "ml.g5.4xlarge";
  readonly ML_G5_8XLARGE: "ml.g5.8xlarge";
  readonly ML_G5_XLARGE: "ml.g5.xlarge";
  readonly ML_M4_10XLARGE: "ml.m4.10xlarge";
  readonly ML_M4_16XLARGE: "ml.m4.16xlarge";
  readonly ML_M4_2XLARGE: "ml.m4.2xlarge";
  readonly ML_M4_4XLARGE: "ml.m4.4xlarge";
  readonly ML_M4_XLARGE: "ml.m4.xlarge";
  readonly ML_M5_12XLARGE: "ml.m5.12xlarge";
  readonly ML_M5_24XLARGE: "ml.m5.24xlarge";
  readonly ML_M5_2XLARGE: "ml.m5.2xlarge";
  readonly ML_M5_4XLARGE: "ml.m5.4xlarge";
  readonly ML_M5_LARGE: "ml.m5.large";
  readonly ML_M5_XLARGE: "ml.m5.xlarge";
  readonly ML_P2_16XLARGE: "ml.p2.16xlarge";
  readonly ML_P2_8XLARGE: "ml.p2.8xlarge";
  readonly ML_P2_XLARGE: "ml.p2.xlarge";
  readonly ML_P3_16XLARGE: "ml.p3.16xlarge";
  readonly ML_P3_2XLARGE: "ml.p3.2xlarge";
  readonly ML_P3_8XLARGE: "ml.p3.8xlarge";
  readonly ML_R5D_12XLARGE: "ml.r5d.12xlarge";
  readonly ML_R5D_16XLARGE: "ml.r5d.16xlarge";
  readonly ML_R5D_24XLARGE: "ml.r5d.24xlarge";
  readonly ML_R5D_2XLARGE: "ml.r5d.2xlarge";
  readonly ML_R5D_4XLARGE: "ml.r5d.4xlarge";
  readonly ML_R5D_8XLARGE: "ml.r5d.8xlarge";
  readonly ML_R5D_LARGE: "ml.r5d.large";
  readonly ML_R5D_XLARGE: "ml.r5d.xlarge";
  readonly ML_R5_12XLARGE: "ml.r5.12xlarge";
  readonly ML_R5_16XLARGE: "ml.r5.16xlarge";
  readonly ML_R5_24XLARGE: "ml.r5.24xlarge";
  readonly ML_R5_2XLARGE: "ml.r5.2xlarge";
  readonly ML_R5_4XLARGE: "ml.r5.4xlarge";
  readonly ML_R5_8XLARGE: "ml.r5.8xlarge";
  readonly ML_R5_LARGE: "ml.r5.large";
  readonly ML_R5_XLARGE: "ml.r5.xlarge";
  readonly ML_T3_2XLARGE: "ml.t3.2xlarge";
  readonly ML_T3_LARGE: "ml.t3.large";
  readonly ML_T3_MEDIUM: "ml.t3.medium";
  readonly ML_T3_XLARGE: "ml.t3.xlarge";
};
export type ProcessingInstanceType =
  (typeof ProcessingInstanceType)[keyof typeof ProcessingInstanceType];
export interface MonitoringClusterConfig {
  InstanceCount: number | undefined;
  InstanceType: ProcessingInstanceType | undefined;
  VolumeSizeInGB: number | undefined;
  VolumeKmsKeyId?: string;
}
export interface MonitoringResources {
  ClusterConfig: MonitoringClusterConfig | undefined;
}
export interface MonitoringNetworkConfig {
  EnableInterContainerTrafficEncryption?: boolean;
  EnableNetworkIsolation?: boolean;
  VpcConfig?: VpcConfig;
}
export interface MonitoringStoppingCondition {
  MaxRuntimeInSeconds: number | undefined;
}
export interface CreateDataQualityJobDefinitionRequest {
  JobDefinitionName: string | undefined;
  DataQualityBaselineConfig?: DataQualityBaselineConfig;
  DataQualityAppSpecification: DataQualityAppSpecification | undefined;
  DataQualityJobInput: DataQualityJobInput | undefined;
  DataQualityJobOutputConfig: MonitoringOutputConfig | undefined;
  JobResources: MonitoringResources | undefined;
  NetworkConfig?: MonitoringNetworkConfig;
  RoleArn: string | undefined;
  StoppingCondition?: MonitoringStoppingCondition;
  Tags?: Tag[];
}
export interface CreateDataQualityJobDefinitionResponse {
  JobDefinitionArn: string | undefined;
}
export declare const EdgePresetDeploymentType: {
  readonly GreengrassV2Component: "GreengrassV2Component";
};
export type EdgePresetDeploymentType =
  (typeof EdgePresetDeploymentType)[keyof typeof EdgePresetDeploymentType];
export interface EdgeOutputConfig {
  S3OutputLocation: string | undefined;
  KmsKeyId?: string;
  PresetDeploymentType?: EdgePresetDeploymentType;
  PresetDeploymentConfig?: string;
}
export interface CreateDeviceFleetRequest {
  DeviceFleetName: string | undefined;
  RoleArn?: string;
  Description?: string;
  OutputConfig: EdgeOutputConfig | undefined;
  Tags?: Tag[];
  EnableIotRoleAlias?: boolean;
}
export interface EFSFileSystemConfig {
  FileSystemId: string | undefined;
  FileSystemPath?: string;
}
export type CustomFileSystemConfig =
  | CustomFileSystemConfig.EFSFileSystemConfigMember
  | CustomFileSystemConfig.$UnknownMember;
export declare namespace CustomFileSystemConfig {
  interface EFSFileSystemConfigMember {
    EFSFileSystemConfig: EFSFileSystemConfig;
    $unknown?: never;
  }
  interface $UnknownMember {
    EFSFileSystemConfig?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    EFSFileSystemConfig: (value: EFSFileSystemConfig) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: CustomFileSystemConfig, visitor: Visitor<T>) => T;
}
export interface CustomPosixUserConfig {
  Uid: number | undefined;
  Gid: number | undefined;
}
export interface EmrSettings {
  AssumableRoleArns?: string[];
  ExecutionRoleArns?: string[];
}
export interface JupyterLabAppSettings {
  DefaultResourceSpec?: ResourceSpec;
  CustomImages?: CustomImage[];
  LifecycleConfigArns?: string[];
  CodeRepositories?: CodeRepository[];
  EmrSettings?: EmrSettings;
}
export interface JupyterServerAppSettings {
  DefaultResourceSpec?: ResourceSpec;
  LifecycleConfigArns?: string[];
  CodeRepositories?: CodeRepository[];
}
export interface KernelGatewayAppSettings {
  DefaultResourceSpec?: ResourceSpec;
  CustomImages?: CustomImage[];
  LifecycleConfigArns?: string[];
}
export interface DefaultEbsStorageSettings {
  DefaultEbsVolumeSizeInGb: number | undefined;
  MaximumEbsVolumeSizeInGb: number | undefined;
}
export interface DefaultSpaceStorageSettings {
  DefaultEbsStorageSettings?: DefaultEbsStorageSettings;
}
export interface DefaultSpaceSettings {
  ExecutionRole?: string;
  SecurityGroups?: string[];
  JupyterServerAppSettings?: JupyterServerAppSettings;
  KernelGatewayAppSettings?: KernelGatewayAppSettings;
  JupyterLabAppSettings?: JupyterLabAppSettings;
  SpaceStorageSettings?: DefaultSpaceStorageSettings;
  CustomPosixUserConfig?: CustomPosixUserConfig;
  CustomFileSystemConfigs?: CustomFileSystemConfig[];
}
export interface RSessionAppSettings {
  DefaultResourceSpec?: ResourceSpec;
  CustomImages?: CustomImage[];
}
export declare const RStudioServerProAccessStatus: {
  readonly Disabled: "DISABLED";
  readonly Enabled: "ENABLED";
};
export type RStudioServerProAccessStatus =
  (typeof RStudioServerProAccessStatus)[keyof typeof RStudioServerProAccessStatus];
export declare const RStudioServerProUserGroup: {
  readonly Admin: "R_STUDIO_ADMIN";
  readonly User: "R_STUDIO_USER";
};
export type RStudioServerProUserGroup =
  (typeof RStudioServerProUserGroup)[keyof typeof RStudioServerProUserGroup];
export interface RStudioServerProAppSettings {
  AccessStatus?: RStudioServerProAccessStatus;
  UserGroup?: RStudioServerProUserGroup;
}
export declare const NotebookOutputOption: {
  readonly Allowed: "Allowed";
  readonly Disabled: "Disabled";
};
export type NotebookOutputOption =
  (typeof NotebookOutputOption)[keyof typeof NotebookOutputOption];
export interface SharingSettings {
  NotebookOutputOption?: NotebookOutputOption;
  S3OutputPath?: string;
  S3KmsKeyId?: string;
}
export declare const StudioWebPortal: {
  readonly Disabled: "DISABLED";
  readonly Enabled: "ENABLED";
};
export type StudioWebPortal =
  (typeof StudioWebPortal)[keyof typeof StudioWebPortal];
export declare const MlTools: {
  readonly AUTO_ML: "AutoMl";
  readonly DATA_WRANGLER: "DataWrangler";
  readonly EMR_CLUSTERS: "EmrClusters";
  readonly ENDPOINTS: "Endpoints";
  readonly EXPERIMENTS: "Experiments";
  readonly FEATURE_STORE: "FeatureStore";
  readonly INFERENCE_OPTIMIZATION: "InferenceOptimization";
  readonly INFERENCE_RECOMMENDER: "InferenceRecommender";
  readonly JUMP_START: "JumpStart";
  readonly MODELS: "Models";
  readonly MODEL_EVALUATION: "ModelEvaluation";
  readonly PIPELINES: "Pipelines";
  readonly PROJECTS: "Projects";
  readonly TRAINING: "Training";
};
export type MlTools = (typeof MlTools)[keyof typeof MlTools];
export interface StudioWebPortalSettings {
  HiddenMlTools?: MlTools[];
  HiddenAppTypes?: AppType[];
}
export interface TensorBoardAppSettings {
  DefaultResourceSpec?: ResourceSpec;
}
export interface UserSettings {
  ExecutionRole?: string;
  SecurityGroups?: string[];
  SharingSettings?: SharingSettings;
  JupyterServerAppSettings?: JupyterServerAppSettings;
  KernelGatewayAppSettings?: KernelGatewayAppSettings;
  TensorBoardAppSettings?: TensorBoardAppSettings;
  RStudioServerProAppSettings?: RStudioServerProAppSettings;
  RSessionAppSettings?: RSessionAppSettings;
  CanvasAppSettings?: CanvasAppSettings;
  CodeEditorAppSettings?: CodeEditorAppSettings;
  JupyterLabAppSettings?: JupyterLabAppSettings;
  SpaceStorageSettings?: DefaultSpaceStorageSettings;
  DefaultLandingUri?: string;
  StudioWebPortal?: StudioWebPortal;
  CustomPosixUserConfig?: CustomPosixUserConfig;
  CustomFileSystemConfigs?: CustomFileSystemConfig[];
  StudioWebPortalSettings?: StudioWebPortalSettings;
}
export interface DockerSettings {
  EnableDockerAccess?: FeatureStatus;
  VpcOnlyTrustedAccounts?: string[];
}
export declare const ExecutionRoleIdentityConfig: {
  readonly DISABLED: "DISABLED";
  readonly USER_PROFILE_NAME: "USER_PROFILE_NAME";
};
export type ExecutionRoleIdentityConfig =
  (typeof ExecutionRoleIdentityConfig)[keyof typeof ExecutionRoleIdentityConfig];
export interface RStudioServerProDomainSettings {
  DomainExecutionRoleArn: string | undefined;
  RStudioConnectUrl?: string;
  RStudioPackageManagerUrl?: string;
  DefaultResourceSpec?: ResourceSpec;
}
export interface DomainSettings {
  SecurityGroupIds?: string[];
  RStudioServerProDomainSettings?: RStudioServerProDomainSettings;
  ExecutionRoleIdentityConfig?: ExecutionRoleIdentityConfig;
  DockerSettings?: DockerSettings;
  AmazonQSettings?: AmazonQSettings;
}
export interface CreateDomainRequest {
  DomainName: string | undefined;
  AuthMode: AuthMode | undefined;
  DefaultUserSettings: UserSettings | undefined;
  DomainSettings?: DomainSettings;
  SubnetIds: string[] | undefined;
  VpcId: string | undefined;
  Tags?: Tag[];
  AppNetworkAccessType?: AppNetworkAccessType;
  HomeEfsFileSystemKmsKeyId?: string;
  KmsKeyId?: string;
  AppSecurityGroupManagement?: AppSecurityGroupManagement;
  DefaultSpaceSettings?: DefaultSpaceSettings;
}
export interface CreateDomainResponse {
  DomainArn?: string;
  Url?: string;
}
export interface EdgeDeploymentModelConfig {
  ModelHandle: string | undefined;
  EdgePackagingJobName: string | undefined;
}
export declare const FailureHandlingPolicy: {
  readonly DoNothing: "DO_NOTHING";
  readonly RollbackOnFailure: "ROLLBACK_ON_FAILURE";
};
export type FailureHandlingPolicy =
  (typeof FailureHandlingPolicy)[keyof typeof FailureHandlingPolicy];
export interface EdgeDeploymentConfig {
  FailureHandlingPolicy: FailureHandlingPolicy | undefined;
}
export declare const DeviceSubsetType: {
  readonly NameContains: "NAMECONTAINS";
  readonly Percentage: "PERCENTAGE";
  readonly Selection: "SELECTION";
};
export type DeviceSubsetType =
  (typeof DeviceSubsetType)[keyof typeof DeviceSubsetType];
export interface DeviceSelectionConfig {
  DeviceSubsetType: DeviceSubsetType | undefined;
  Percentage?: number;
  DeviceNames?: string[];
  DeviceNameContains?: string;
}
export interface DeploymentStage {
  StageName: string | undefined;
  DeviceSelectionConfig: DeviceSelectionConfig | undefined;
  DeploymentConfig?: EdgeDeploymentConfig;
}
export interface CreateEdgeDeploymentPlanRequest {
  EdgeDeploymentPlanName: string | undefined;
  ModelConfigs: EdgeDeploymentModelConfig[] | undefined;
  DeviceFleetName: string | undefined;
  Stages?: DeploymentStage[];
  Tags?: Tag[];
}
export interface CreateEdgeDeploymentPlanResponse {
  EdgeDeploymentPlanArn: string | undefined;
}
export interface CreateEdgeDeploymentStageRequest {
  EdgeDeploymentPlanName: string | undefined;
  Stages: DeploymentStage[] | undefined;
}
export interface CreateEdgePackagingJobRequest {
  EdgePackagingJobName: string | undefined;
  CompilationJobName: string | undefined;
  ModelName: string | undefined;
  ModelVersion: string | undefined;
  RoleArn: string | undefined;
  OutputConfig: EdgeOutputConfig | undefined;
  ResourceKey?: string;
  Tags?: Tag[];
}
export interface RollingUpdatePolicy {
  MaximumBatchSize: CapacitySize | undefined;
  WaitIntervalInSeconds: number | undefined;
  MaximumExecutionTimeoutInSeconds?: number;
  RollbackMaximumBatchSize?: CapacitySize;
}
export interface DeploymentConfig {
  BlueGreenUpdatePolicy?: BlueGreenUpdatePolicy;
  RollingUpdatePolicy?: RollingUpdatePolicy;
  AutoRollbackConfiguration?: AutoRollbackConfig;
}
export interface CreateEndpointInput {
  EndpointName: string | undefined;
  EndpointConfigName: string | undefined;
  DeploymentConfig?: DeploymentConfig;
  Tags?: Tag[];
}
export interface CreateEndpointOutput {
  EndpointArn: string | undefined;
}
export interface DataCaptureConfig {
  EnableCapture?: boolean;
  InitialSamplingPercentage: number | undefined;
  DestinationS3Uri: string | undefined;
  KmsKeyId?: string;
  CaptureOptions: CaptureOption[] | undefined;
  CaptureContentTypeHeader?: CaptureContentTypeHeader;
}
export interface ExplainerConfig {
  ClarifyExplainerConfig?: ClarifyExplainerConfig;
}
export declare const ProductionVariantAcceleratorType: {
  readonly ML_EIA1_LARGE: "ml.eia1.large";
  readonly ML_EIA1_MEDIUM: "ml.eia1.medium";
  readonly ML_EIA1_XLARGE: "ml.eia1.xlarge";
  readonly ML_EIA2_LARGE: "ml.eia2.large";
  readonly ML_EIA2_MEDIUM: "ml.eia2.medium";
  readonly ML_EIA2_XLARGE: "ml.eia2.xlarge";
};
export type ProductionVariantAcceleratorType =
  (typeof ProductionVariantAcceleratorType)[keyof typeof ProductionVariantAcceleratorType];
export interface ProductionVariantCoreDumpConfig {
  DestinationS3Uri: string | undefined;
  KmsKeyId?: string;
}
export declare const ProductionVariantInferenceAmiVersion: {
  readonly AL2_GPU_2: "al2-ami-sagemaker-inference-gpu-2";
};
export type ProductionVariantInferenceAmiVersion =
  (typeof ProductionVariantInferenceAmiVersion)[keyof typeof ProductionVariantInferenceAmiVersion];
export declare const ManagedInstanceScalingStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type ManagedInstanceScalingStatus =
  (typeof ManagedInstanceScalingStatus)[keyof typeof ManagedInstanceScalingStatus];
export interface ProductionVariantManagedInstanceScaling {
  Status?: ManagedInstanceScalingStatus;
  MinInstanceCount?: number;
  MaxInstanceCount?: number;
}
export declare const RoutingStrategy: {
  readonly LEAST_OUTSTANDING_REQUESTS: "LEAST_OUTSTANDING_REQUESTS";
  readonly RANDOM: "RANDOM";
};
export type RoutingStrategy =
  (typeof RoutingStrategy)[keyof typeof RoutingStrategy];
export interface ProductionVariantRoutingConfig {
  RoutingStrategy: RoutingStrategy | undefined;
}
export interface ProductionVariantServerlessConfig {
  MemorySizeInMB: number | undefined;
  MaxConcurrency: number | undefined;
  ProvisionedConcurrency?: number;
}
export interface ProductionVariant {
  VariantName: string | undefined;
  ModelName?: string;
  InitialInstanceCount?: number;
  InstanceType?: ProductionVariantInstanceType;
  InitialVariantWeight?: number;
  AcceleratorType?: ProductionVariantAcceleratorType;
  CoreDumpConfig?: ProductionVariantCoreDumpConfig;
  ServerlessConfig?: ProductionVariantServerlessConfig;
  VolumeSizeInGB?: number;
  ModelDataDownloadTimeoutInSeconds?: number;
  ContainerStartupHealthCheckTimeoutInSeconds?: number;
  EnableSSMAccess?: boolean;
  ManagedInstanceScaling?: ProductionVariantManagedInstanceScaling;
  RoutingConfig?: ProductionVariantRoutingConfig;
  InferenceAmiVersion?: ProductionVariantInferenceAmiVersion;
}
export interface CreateEndpointConfigInput {
  EndpointConfigName: string | undefined;
  ProductionVariants: ProductionVariant[] | undefined;
  DataCaptureConfig?: DataCaptureConfig;
  Tags?: Tag[];
  KmsKeyId?: string;
  AsyncInferenceConfig?: AsyncInferenceConfig;
  ExplainerConfig?: ExplainerConfig;
  ShadowProductionVariants?: ProductionVariant[];
  ExecutionRoleArn?: string;
  VpcConfig?: VpcConfig;
  EnableNetworkIsolation?: boolean;
}
export interface CreateEndpointConfigOutput {
  EndpointConfigArn: string | undefined;
}
export interface CreateExperimentRequest {
  ExperimentName: string | undefined;
  DisplayName?: string;
  Description?: string;
  Tags?: Tag[];
}
export interface CreateExperimentResponse {
  ExperimentArn?: string;
}
export declare const FeatureType: {
  readonly FRACTIONAL: "Fractional";
  readonly INTEGRAL: "Integral";
  readonly STRING: "String";
};
export type FeatureType = (typeof FeatureType)[keyof typeof FeatureType];
export interface FeatureDefinition {
  FeatureName: string | undefined;
  FeatureType: FeatureType | undefined;
  CollectionType?: CollectionType;
  CollectionConfig?: CollectionConfig;
}
export interface DataCatalogConfig {
  TableName: string | undefined;
  Catalog: string | undefined;
  Database: string | undefined;
}
export interface S3StorageConfig {
  S3Uri: string | undefined;
  KmsKeyId?: string;
  ResolvedOutputS3Uri?: string;
}
export declare const TableFormat: {
  readonly DEFAULT: "Default";
  readonly GLUE: "Glue";
  readonly ICEBERG: "Iceberg";
};
export type TableFormat = (typeof TableFormat)[keyof typeof TableFormat];
export interface OfflineStoreConfig {
  S3StorageConfig: S3StorageConfig | undefined;
  DisableGlueTableCreation?: boolean;
  DataCatalogConfig?: DataCatalogConfig;
  TableFormat?: TableFormat;
}
export interface OnlineStoreSecurityConfig {
  KmsKeyId?: string;
}
export declare const StorageType: {
  readonly IN_MEMORY: "InMemory";
  readonly STANDARD: "Standard";
};
export type StorageType = (typeof StorageType)[keyof typeof StorageType];
export declare const TtlDurationUnit: {
  readonly DAYS: "Days";
  readonly HOURS: "Hours";
  readonly MINUTES: "Minutes";
  readonly SECONDS: "Seconds";
  readonly WEEKS: "Weeks";
};
export type TtlDurationUnit =
  (typeof TtlDurationUnit)[keyof typeof TtlDurationUnit];
export interface TtlDuration {
  Unit?: TtlDurationUnit;
  Value?: number;
}
export interface OnlineStoreConfig {
  SecurityConfig?: OnlineStoreSecurityConfig;
  EnableOnlineStore?: boolean;
  TtlDuration?: TtlDuration;
  StorageType?: StorageType;
}
export declare const ThroughputMode: {
  readonly ON_DEMAND: "OnDemand";
  readonly PROVISIONED: "Provisioned";
};
export type ThroughputMode =
  (typeof ThroughputMode)[keyof typeof ThroughputMode];
export interface ThroughputConfig {
  ThroughputMode: ThroughputMode | undefined;
  ProvisionedReadCapacityUnits?: number;
  ProvisionedWriteCapacityUnits?: number;
}
export interface CreateFeatureGroupRequest {
  FeatureGroupName: string | undefined;
  RecordIdentifierFeatureName: string | undefined;
  EventTimeFeatureName: string | undefined;
  FeatureDefinitions: FeatureDefinition[] | undefined;
  OnlineStoreConfig?: OnlineStoreConfig;
  OfflineStoreConfig?: OfflineStoreConfig;
  ThroughputConfig?: ThroughputConfig;
  RoleArn?: string;
  Description?: string;
  Tags?: Tag[];
}
export interface CreateFeatureGroupResponse {
  FeatureGroupArn: string | undefined;
}
export interface HumanLoopActivationConditionsConfig {
  HumanLoopActivationConditions: __LazyJsonString | string | undefined;
}
export interface HumanLoopActivationConfig {
  HumanLoopActivationConditionsConfig:
    | HumanLoopActivationConditionsConfig
    | undefined;
}
export interface USD {
  Dollars?: number;
  Cents?: number;
  TenthFractionsOfACent?: number;
}
export interface PublicWorkforceTaskPrice {
  AmountInUsd?: USD;
}
export interface HumanLoopConfig {
  WorkteamArn: string | undefined;
  HumanTaskUiArn: string | undefined;
  TaskTitle: string | undefined;
  TaskDescription: string | undefined;
  TaskCount: number | undefined;
  TaskAvailabilityLifetimeInSeconds?: number;
  TaskTimeLimitInSeconds?: number;
  TaskKeywords?: string[];
  PublicWorkforceTaskPrice?: PublicWorkforceTaskPrice;
}
export interface HumanLoopRequestSource {
  AwsManagedHumanLoopRequestSource:
    | AwsManagedHumanLoopRequestSource
    | undefined;
}
export interface FlowDefinitionOutputConfig {
  S3OutputPath: string | undefined;
  KmsKeyId?: string;
}
export interface CreateFlowDefinitionRequest {
  FlowDefinitionName: string | undefined;
  HumanLoopRequestSource?: HumanLoopRequestSource;
  HumanLoopActivationConfig?: HumanLoopActivationConfig;
  HumanLoopConfig?: HumanLoopConfig;
  OutputConfig: FlowDefinitionOutputConfig | undefined;
  RoleArn: string | undefined;
  Tags?: Tag[];
}
export interface CreateFlowDefinitionResponse {
  FlowDefinitionArn: string | undefined;
}
export interface HubS3StorageConfig {
  S3OutputPath?: string;
}
export interface CreateHubRequest {
  HubName: string | undefined;
  HubDescription: string | undefined;
  HubDisplayName?: string;
  HubSearchKeywords?: string[];
  S3StorageConfig?: HubS3StorageConfig;
  Tags?: Tag[];
}
export interface CreateHubResponse {
  HubArn: string | undefined;
}
export interface CreateHubContentReferenceRequest {
  HubName: string | undefined;
  SageMakerPublicHubContentArn: string | undefined;
  HubContentName?: string;
  MinVersion?: string;
  Tags?: Tag[];
}
export interface CreateHubContentReferenceResponse {
  HubArn: string | undefined;
  HubContentArn: string | undefined;
}
export interface UiTemplate {
  Content: string | undefined;
}
export interface CreateHumanTaskUiRequest {
  HumanTaskUiName: string | undefined;
  UiTemplate: UiTemplate | undefined;
  Tags?: Tag[];
}
export interface CreateHumanTaskUiResponse {
  HumanTaskUiArn: string | undefined;
}
export interface IntegerParameterRange {
  Name: string | undefined;
  MinValue: string | undefined;
  MaxValue: string | undefined;
  ScalingType?: HyperParameterScalingType;
}
export interface ParameterRanges {
  IntegerParameterRanges?: IntegerParameterRange[];
  ContinuousParameterRanges?: ContinuousParameterRange[];
  CategoricalParameterRanges?: CategoricalParameterRange[];
  AutoParameters?: AutoParameter[];
}
export interface ResourceLimits {
  MaxNumberOfTrainingJobs?: number;
  MaxParallelTrainingJobs: number | undefined;
  MaxRuntimeInSeconds?: number;
}
export declare const HyperParameterTuningJobStrategyType: {
  readonly BAYESIAN: "Bayesian";
  readonly GRID: "Grid";
  readonly HYPERBAND: "Hyperband";
  readonly RANDOM: "Random";
};
export type HyperParameterTuningJobStrategyType =
  (typeof HyperParameterTuningJobStrategyType)[keyof typeof HyperParameterTuningJobStrategyType];
export interface HyperbandStrategyConfig {
  MinResource?: number;
  MaxResource?: number;
}
export interface HyperParameterTuningJobStrategyConfig {
  HyperbandStrategyConfig?: HyperbandStrategyConfig;
}
export declare const TrainingJobEarlyStoppingType: {
  readonly AUTO: "Auto";
  readonly OFF: "Off";
};
export type TrainingJobEarlyStoppingType =
  (typeof TrainingJobEarlyStoppingType)[keyof typeof TrainingJobEarlyStoppingType];
export interface TuningJobCompletionCriteria {
  TargetObjectiveMetricValue?: number;
  BestObjectiveNotImproving?: BestObjectiveNotImproving;
  ConvergenceDetected?: ConvergenceDetected;
}
export interface HyperParameterTuningJobConfig {
  Strategy: HyperParameterTuningJobStrategyType | undefined;
  StrategyConfig?: HyperParameterTuningJobStrategyConfig;
  HyperParameterTuningJobObjective?: HyperParameterTuningJobObjective;
  ResourceLimits: ResourceLimits | undefined;
  ParameterRanges?: ParameterRanges;
  TrainingJobEarlyStoppingType?: TrainingJobEarlyStoppingType;
  TuningJobCompletionCriteria?: TuningJobCompletionCriteria;
  RandomSeed?: number;
}
export interface HyperParameterAlgorithmSpecification {
  TrainingImage?: string;
  TrainingInputMode: TrainingInputMode | undefined;
  AlgorithmName?: string;
  MetricDefinitions?: MetricDefinition[];
}
export declare const HyperParameterTuningAllocationStrategy: {
  readonly PRIORITIZED: "Prioritized";
};
export type HyperParameterTuningAllocationStrategy =
  (typeof HyperParameterTuningAllocationStrategy)[keyof typeof HyperParameterTuningAllocationStrategy];
export interface HyperParameterTuningInstanceConfig {
  InstanceType: TrainingInstanceType | undefined;
  InstanceCount: number | undefined;
  VolumeSizeInGB: number | undefined;
}
export interface HyperParameterTuningResourceConfig {
  InstanceType?: TrainingInstanceType;
  InstanceCount?: number;
  VolumeSizeInGB?: number;
  VolumeKmsKeyId?: string;
  AllocationStrategy?: HyperParameterTuningAllocationStrategy;
  InstanceConfigs?: HyperParameterTuningInstanceConfig[];
}
export interface RetryStrategy {
  MaximumRetryAttempts: number | undefined;
}
export interface HyperParameterTrainingJobDefinition {
  DefinitionName?: string;
  TuningObjective?: HyperParameterTuningJobObjective;
  HyperParameterRanges?: ParameterRanges;
  StaticHyperParameters?: Record<string, string>;
  AlgorithmSpecification: HyperParameterAlgorithmSpecification | undefined;
  RoleArn: string | undefined;
  InputDataConfig?: Channel[];
  VpcConfig?: VpcConfig;
  OutputDataConfig: OutputDataConfig | undefined;
  ResourceConfig?: ResourceConfig;
  HyperParameterTuningResourceConfig?: HyperParameterTuningResourceConfig;
  StoppingCondition: StoppingCondition | undefined;
  EnableNetworkIsolation?: boolean;
  EnableInterContainerTrafficEncryption?: boolean;
  EnableManagedSpotTraining?: boolean;
  CheckpointConfig?: CheckpointConfig;
  RetryStrategy?: RetryStrategy;
  Environment?: Record<string, string>;
}
export interface ParentHyperParameterTuningJob {
  HyperParameterTuningJobName?: string;
}
export declare const HyperParameterTuningJobWarmStartType: {
  readonly IDENTICAL_DATA_AND_ALGORITHM: "IdenticalDataAndAlgorithm";
  readonly TRANSFER_LEARNING: "TransferLearning";
};
export type HyperParameterTuningJobWarmStartType =
  (typeof HyperParameterTuningJobWarmStartType)[keyof typeof HyperParameterTuningJobWarmStartType];
export interface HyperParameterTuningJobWarmStartConfig {
  ParentHyperParameterTuningJobs: ParentHyperParameterTuningJob[] | undefined;
  WarmStartType: HyperParameterTuningJobWarmStartType | undefined;
}
export interface CreateHyperParameterTuningJobRequest {
  HyperParameterTuningJobName: string | undefined;
  HyperParameterTuningJobConfig: HyperParameterTuningJobConfig | undefined;
  TrainingJobDefinition?: HyperParameterTrainingJobDefinition;
  TrainingJobDefinitions?: HyperParameterTrainingJobDefinition[];
  WarmStartConfig?: HyperParameterTuningJobWarmStartConfig;
  Tags?: Tag[];
  Autotune?: Autotune;
}
export interface CreateHyperParameterTuningJobResponse {
  HyperParameterTuningJobArn: string | undefined;
}
export interface CreateImageRequest {
  Description?: string;
  DisplayName?: string;
  ImageName: string | undefined;
  RoleArn: string | undefined;
  Tags?: Tag[];
}
export interface CreateImageResponse {
  ImageArn?: string;
}
export declare const JobType: {
  readonly INFERENCE: "INFERENCE";
  readonly NOTEBOOK_KERNEL: "NOTEBOOK_KERNEL";
  readonly TRAINING: "TRAINING";
};
export type JobType = (typeof JobType)[keyof typeof JobType];
export declare const Processor: {
  readonly CPU: "CPU";
  readonly GPU: "GPU";
};
export type Processor = (typeof Processor)[keyof typeof Processor];
export declare const VendorGuidance: {
  readonly ARCHIVED: "ARCHIVED";
  readonly NOT_PROVIDED: "NOT_PROVIDED";
  readonly STABLE: "STABLE";
  readonly TO_BE_ARCHIVED: "TO_BE_ARCHIVED";
};
export type VendorGuidance =
  (typeof VendorGuidance)[keyof typeof VendorGuidance];
export interface CreateImageVersionRequest {
  BaseImage: string | undefined;
  ClientToken?: string;
  ImageName: string | undefined;
  Aliases?: string[];
  VendorGuidance?: VendorGuidance;
  JobType?: JobType;
  MLFramework?: string;
  ProgrammingLang?: string;
  Processor?: Processor;
  Horovod?: boolean;
  ReleaseNotes?: string;
}
export interface CreateImageVersionResponse {
  ImageVersionArn?: string;
}
export interface InferenceComponentRuntimeConfig {
  CopyCount: number | undefined;
}
export interface InferenceComponentComputeResourceRequirements {
  NumberOfCpuCoresRequired?: number;
  NumberOfAcceleratorDevicesRequired?: number;
  MinMemoryRequiredInMb: number | undefined;
  MaxMemoryRequiredInMb?: number;
}
export interface InferenceComponentContainerSpecification {
  Image?: string;
  ArtifactUrl?: string;
  Environment?: Record<string, string>;
}
export interface InferenceComponentStartupParameters {
  ModelDataDownloadTimeoutInSeconds?: number;
  ContainerStartupHealthCheckTimeoutInSeconds?: number;
}
export interface InferenceComponentSpecification {
  ModelName?: string;
  Container?: InferenceComponentContainerSpecification;
  StartupParameters?: InferenceComponentStartupParameters;
  ComputeResourceRequirements:
    | InferenceComponentComputeResourceRequirements
    | undefined;
}
export interface CreateInferenceComponentInput {
  InferenceComponentName: string | undefined;
  EndpointName: string | undefined;
  VariantName: string | undefined;
  Specification: InferenceComponentSpecification | undefined;
  RuntimeConfig: InferenceComponentRuntimeConfig | undefined;
  Tags?: Tag[];
}
export interface CreateInferenceComponentOutput {
  InferenceComponentArn: string | undefined;
}
export interface InferenceExperimentDataStorageConfig {
  Destination: string | undefined;
  KmsKey?: string;
  ContentType?: CaptureContentTypeHeader;
}
export declare const ModelInfrastructureType: {
  readonly REAL_TIME_INFERENCE: "RealTimeInference";
};
export type ModelInfrastructureType =
  (typeof ModelInfrastructureType)[keyof typeof ModelInfrastructureType];
export declare const _InstanceType: {
  readonly ML_C4_2XLARGE: "ml.c4.2xlarge";
  readonly ML_C4_4XLARGE: "ml.c4.4xlarge";
  readonly ML_C4_8XLARGE: "ml.c4.8xlarge";
  readonly ML_C4_XLARGE: "ml.c4.xlarge";
  readonly ML_C5D_18XLARGE: "ml.c5d.18xlarge";
  readonly ML_C5D_2XLARGE: "ml.c5d.2xlarge";
  readonly ML_C5D_4XLARGE: "ml.c5d.4xlarge";
  readonly ML_C5D_9XLARGE: "ml.c5d.9xlarge";
  readonly ML_C5D_XLARGE: "ml.c5d.xlarge";
  readonly ML_C5_18XLARGE: "ml.c5.18xlarge";
  readonly ML_C5_2XLARGE: "ml.c5.2xlarge";
  readonly ML_C5_4XLARGE: "ml.c5.4xlarge";
  readonly ML_C5_9XLARGE: "ml.c5.9xlarge";
  readonly ML_C5_XLARGE: "ml.c5.xlarge";
  readonly ML_C6ID_12XLARGE: "ml.c6id.12xlarge";
  readonly ML_C6ID_16XLARGE: "ml.c6id.16xlarge";
  readonly ML_C6ID_24XLARGE: "ml.c6id.24xlarge";
  readonly ML_C6ID_2XLARGE: "ml.c6id.2xlarge";
  readonly ML_C6ID_32XLARGE: "ml.c6id.32xlarge";
  readonly ML_C6ID_4XLARGE: "ml.c6id.4xlarge";
  readonly ML_C6ID_8XLARGE: "ml.c6id.8xlarge";
  readonly ML_C6ID_LARGE: "ml.c6id.large";
  readonly ML_C6ID_XLARGE: "ml.c6id.xlarge";
  readonly ML_C6I_12XLARGE: "ml.c6i.12xlarge";
  readonly ML_C6I_16XLARGE: "ml.c6i.16xlarge";
  readonly ML_C6I_24XLARGE: "ml.c6i.24xlarge";
  readonly ML_C6I_2XLARGE: "ml.c6i.2xlarge";
  readonly ML_C6I_32XLARGE: "ml.c6i.32xlarge";
  readonly ML_C6I_4XLARGE: "ml.c6i.4xlarge";
  readonly ML_C6I_8XLARGE: "ml.c6i.8xlarge";
  readonly ML_C6I_LARGE: "ml.c6i.large";
  readonly ML_C6I_XLARGE: "ml.c6i.xlarge";
  readonly ML_C7I_12XLARGE: "ml.c7i.12xlarge";
  readonly ML_C7I_16XLARGE: "ml.c7i.16xlarge";
  readonly ML_C7I_24XLARGE: "ml.c7i.24xlarge";
  readonly ML_C7I_2XLARGE: "ml.c7i.2xlarge";
  readonly ML_C7I_48XLARGE: "ml.c7i.48xlarge";
  readonly ML_C7I_4XLARGE: "ml.c7i.4xlarge";
  readonly ML_C7I_8XLARGE: "ml.c7i.8xlarge";
  readonly ML_C7I_LARGE: "ml.c7i.large";
  readonly ML_C7I_XLARGE: "ml.c7i.xlarge";
  readonly ML_G4DN_12XLARGE: "ml.g4dn.12xlarge";
  readonly ML_G4DN_16XLARGE: "ml.g4dn.16xlarge";
  readonly ML_G4DN_2XLARGE: "ml.g4dn.2xlarge";
  readonly ML_G4DN_4XLARGE: "ml.g4dn.4xlarge";
  readonly ML_G4DN_8XLARGE: "ml.g4dn.8xlarge";
  readonly ML_G4DN_XLARGE: "ml.g4dn.xlarge";
  readonly ML_G5_12XLARGE: "ml.g5.12xlarge";
  readonly ML_G5_16XLARGE: "ml.g5.16xlarge";
  readonly ML_G5_24XLARGE: "ml.g5.24xlarge";
  readonly ML_G5_2XLARGE: "ml.g5.2xlarge";
  readonly ML_G5_48XLARGE: "ml.g5.48xlarge";
  readonly ML_G5_4XLARGE: "ml.g5.4xlarge";
  readonly ML_G5_8XLARGE: "ml.g5.8xlarge";
  readonly ML_G5_XLARGE: "ml.g5.xlarge";
  readonly ML_G6_12XLARGE: "ml.g6.12xlarge";
  readonly ML_G6_16XLARGE: "ml.g6.16xlarge";
  readonly ML_G6_24XLARGE: "ml.g6.24xlarge";
  readonly ML_G6_2XLARGE: "ml.g6.2xlarge";
  readonly ML_G6_48XLARGE: "ml.g6.48xlarge";
  readonly ML_G6_4XLARGE: "ml.g6.4xlarge";
  readonly ML_G6_8XLARGE: "ml.g6.8xlarge";
  readonly ML_G6_XLARGE: "ml.g6.xlarge";
  readonly ML_INF1_24XLARGE: "ml.inf1.24xlarge";
  readonly ML_INF1_2XLARGE: "ml.inf1.2xlarge";
  readonly ML_INF1_6XLARGE: "ml.inf1.6xlarge";
  readonly ML_INF1_XLARGE: "ml.inf1.xlarge";
  readonly ML_M4_10XLARGE: "ml.m4.10xlarge";
  readonly ML_M4_16XLARGE: "ml.m4.16xlarge";
  readonly ML_M4_2XLARGE: "ml.m4.2xlarge";
  readonly ML_M4_4XLARGE: "ml.m4.4xlarge";
  readonly ML_M4_XLARGE: "ml.m4.xlarge";
  readonly ML_M5D_12XLARGE: "ml.m5d.12xlarge";
  readonly ML_M5D_16XLARGE: "ml.m5d.16xlarge";
  readonly ML_M5D_24XLARGE: "ml.m5d.24xlarge";
  readonly ML_M5D_2XLARGE: "ml.m5d.2xlarge";
  readonly ML_M5D_4XLARGE: "ml.m5d.4xlarge";
  readonly ML_M5D_8XLARGE: "ml.m5d.8xlarge";
  readonly ML_M5D_LARGE: "ml.m5d.large";
  readonly ML_M5D_XLARGE: "ml.m5d.xlarge";
  readonly ML_M5_12XLARGE: "ml.m5.12xlarge";
  readonly ML_M5_24XLARGE: "ml.m5.24xlarge";
  readonly ML_M5_2XLARGE: "ml.m5.2xlarge";
  readonly ML_M5_4XLARGE: "ml.m5.4xlarge";
  readonly ML_M5_XLARGE: "ml.m5.xlarge";
  readonly ML_M6ID_12XLARGE: "ml.m6id.12xlarge";
  readonly ML_M6ID_16XLARGE: "ml.m6id.16xlarge";
  readonly ML_M6ID_24XLARGE: "ml.m6id.24xlarge";
  readonly ML_M6ID_2XLARGE: "ml.m6id.2xlarge";
  readonly ML_M6ID_32XLARGE: "ml.m6id.32xlarge";
  readonly ML_M6ID_4XLARGE: "ml.m6id.4xlarge";
  readonly ML_M6ID_8XLARGE: "ml.m6id.8xlarge";
  readonly ML_M6ID_LARGE: "ml.m6id.large";
  readonly ML_M6ID_XLARGE: "ml.m6id.xlarge";
  readonly ML_M6I_12XLARGE: "ml.m6i.12xlarge";
  readonly ML_M6I_16XLARGE: "ml.m6i.16xlarge";
  readonly ML_M6I_24XLARGE: "ml.m6i.24xlarge";
  readonly ML_M6I_2XLARGE: "ml.m6i.2xlarge";
  readonly ML_M6I_32XLARGE: "ml.m6i.32xlarge";
  readonly ML_M6I_4XLARGE: "ml.m6i.4xlarge";
  readonly ML_M6I_8XLARGE: "ml.m6i.8xlarge";
  readonly ML_M6I_LARGE: "ml.m6i.large";
  readonly ML_M6I_XLARGE: "ml.m6i.xlarge";
  readonly ML_M7I_12XLARGE: "ml.m7i.12xlarge";
  readonly ML_M7I_16XLARGE: "ml.m7i.16xlarge";
  readonly ML_M7I_24XLARGE: "ml.m7i.24xlarge";
  readonly ML_M7I_2XLARGE: "ml.m7i.2xlarge";
  readonly ML_M7I_48XLARGE: "ml.m7i.48xlarge";
  readonly ML_M7I_4XLARGE: "ml.m7i.4xlarge";
  readonly ML_M7I_8XLARGE: "ml.m7i.8xlarge";
  readonly ML_M7I_LARGE: "ml.m7i.large";
  readonly ML_M7I_XLARGE: "ml.m7i.xlarge";
  readonly ML_P2_16XLARGE: "ml.p2.16xlarge";
  readonly ML_P2_8XLARGE: "ml.p2.8xlarge";
  readonly ML_P2_XLARGE: "ml.p2.xlarge";
  readonly ML_P3DN_24XLARGE: "ml.p3dn.24xlarge";
  readonly ML_P3_16XLARGE: "ml.p3.16xlarge";
  readonly ML_P3_2XLARGE: "ml.p3.2xlarge";
  readonly ML_P3_8XLARGE: "ml.p3.8xlarge";
  readonly ML_P4DE_24XLARGE: "ml.p4de.24xlarge";
  readonly ML_P4D_24XLARGE: "ml.p4d.24xlarge";
  readonly ML_P5_48XLARGE: "ml.p5.48xlarge";
  readonly ML_R5_12XLARGE: "ml.r5.12xlarge";
  readonly ML_R5_16XLARGE: "ml.r5.16xlarge";
  readonly ML_R5_24XLARGE: "ml.r5.24xlarge";
  readonly ML_R5_2XLARGE: "ml.r5.2xlarge";
  readonly ML_R5_4XLARGE: "ml.r5.4xlarge";
  readonly ML_R5_8XLARGE: "ml.r5.8xlarge";
  readonly ML_R5_LARGE: "ml.r5.large";
  readonly ML_R5_XLARGE: "ml.r5.xlarge";
  readonly ML_R6ID_12XLARGE: "ml.r6id.12xlarge";
  readonly ML_R6ID_16XLARGE: "ml.r6id.16xlarge";
  readonly ML_R6ID_24XLARGE: "ml.r6id.24xlarge";
  readonly ML_R6ID_2XLARGE: "ml.r6id.2xlarge";
  readonly ML_R6ID_32XLARGE: "ml.r6id.32xlarge";
  readonly ML_R6ID_4XLARGE: "ml.r6id.4xlarge";
  readonly ML_R6ID_8XLARGE: "ml.r6id.8xlarge";
  readonly ML_R6ID_LARGE: "ml.r6id.large";
  readonly ML_R6ID_XLARGE: "ml.r6id.xlarge";
  readonly ML_R6I_12XLARGE: "ml.r6i.12xlarge";
  readonly ML_R6I_16XLARGE: "ml.r6i.16xlarge";
  readonly ML_R6I_24XLARGE: "ml.r6i.24xlarge";
  readonly ML_R6I_2XLARGE: "ml.r6i.2xlarge";
  readonly ML_R6I_32XLARGE: "ml.r6i.32xlarge";
  readonly ML_R6I_4XLARGE: "ml.r6i.4xlarge";
  readonly ML_R6I_8XLARGE: "ml.r6i.8xlarge";
  readonly ML_R6I_LARGE: "ml.r6i.large";
  readonly ML_R6I_XLARGE: "ml.r6i.xlarge";
  readonly ML_R7I_12XLARGE: "ml.r7i.12xlarge";
  readonly ML_R7I_16XLARGE: "ml.r7i.16xlarge";
  readonly ML_R7I_24XLARGE: "ml.r7i.24xlarge";
  readonly ML_R7I_2XLARGE: "ml.r7i.2xlarge";
  readonly ML_R7I_48XLARGE: "ml.r7i.48xlarge";
  readonly ML_R7I_4XLARGE: "ml.r7i.4xlarge";
  readonly ML_R7I_8XLARGE: "ml.r7i.8xlarge";
  readonly ML_R7I_LARGE: "ml.r7i.large";
  readonly ML_R7I_XLARGE: "ml.r7i.xlarge";
  readonly ML_T2_2XLARGE: "ml.t2.2xlarge";
  readonly ML_T2_LARGE: "ml.t2.large";
  readonly ML_T2_MEDIUM: "ml.t2.medium";
  readonly ML_T2_XLARGE: "ml.t2.xlarge";
  readonly ML_T3_2XLARGE: "ml.t3.2xlarge";
  readonly ML_T3_LARGE: "ml.t3.large";
  readonly ML_T3_MEDIUM: "ml.t3.medium";
  readonly ML_T3_XLARGE: "ml.t3.xlarge";
};
export type _InstanceType = (typeof _InstanceType)[keyof typeof _InstanceType];
export interface RealTimeInferenceConfig {
  InstanceType: _InstanceType | undefined;
  InstanceCount: number | undefined;
}
export interface ModelInfrastructureConfig {
  InfrastructureType: ModelInfrastructureType | undefined;
  RealTimeInferenceConfig: RealTimeInferenceConfig | undefined;
}
export interface ModelVariantConfig {
  ModelName: string | undefined;
  VariantName: string | undefined;
  InfrastructureConfig: ModelInfrastructureConfig | undefined;
}
export interface InferenceExperimentSchedule {
  StartTime?: Date;
  EndTime?: Date;
}
export interface ShadowModelVariantConfig {
  ShadowModelVariantName: string | undefined;
  SamplingPercentage: number | undefined;
}
export interface ShadowModeConfig {
  SourceModelVariantName: string | undefined;
  ShadowModelVariants: ShadowModelVariantConfig[] | undefined;
}
export declare const InferenceExperimentType: {
  readonly SHADOW_MODE: "ShadowMode";
};
export type InferenceExperimentType =
  (typeof InferenceExperimentType)[keyof typeof InferenceExperimentType];
export interface CreateInferenceExperimentRequest {
  Name: string | undefined;
  Type: InferenceExperimentType | undefined;
  Schedule?: InferenceExperimentSchedule;
  Description?: string;
  RoleArn: string | undefined;
  EndpointName: string | undefined;
  ModelVariants: ModelVariantConfig[] | undefined;
  DataStorageConfig?: InferenceExperimentDataStorageConfig;
  ShadowModeConfig: ShadowModeConfig | undefined;
  KmsKey?: string;
  Tags?: Tag[];
}
export interface CreateInferenceExperimentResponse {
  InferenceExperimentArn: string | undefined;
}
export interface RecommendationJobPayloadConfig {
  SamplePayloadUrl?: string;
  SupportedContentTypes?: string[];
}
export declare const RecommendationJobSupportedEndpointType: {
  readonly REALTIME: "RealTime";
  readonly SERVERLESS: "Serverless";
};
export type RecommendationJobSupportedEndpointType =
  (typeof RecommendationJobSupportedEndpointType)[keyof typeof RecommendationJobSupportedEndpointType];
export interface RecommendationJobContainerConfig {
  Domain?: string;
  Task?: string;
  Framework?: string;
  FrameworkVersion?: string;
  PayloadConfig?: RecommendationJobPayloadConfig;
  NearestModelName?: string;
  SupportedInstanceTypes?: string[];
  SupportedEndpointType?: RecommendationJobSupportedEndpointType;
  DataInputConfig?: string;
  SupportedResponseMIMETypes?: string[];
}
export interface EnvironmentParameterRanges {
  CategoricalParameterRanges?: CategoricalParameter[];
}
export interface EndpointInputConfiguration {
  InstanceType?: ProductionVariantInstanceType;
  ServerlessConfig?: ProductionVariantServerlessConfig;
  InferenceSpecificationName?: string;
  EnvironmentParameterRanges?: EnvironmentParameterRanges;
}
export interface EndpointInfo {
  EndpointName?: string;
}
export interface RecommendationJobResourceLimit {
  MaxNumberOfTests?: number;
  MaxParallelOfTests?: number;
}
export interface Phase {
  InitialNumberOfUsers?: number;
  SpawnRate?: number;
  DurationInSeconds?: number;
}
export interface Stairs {
  DurationInSeconds?: number;
  NumberOfSteps?: number;
  UsersPerStep?: number;
}
export declare const TrafficType: {
  readonly PHASES: "PHASES";
  readonly STAIRS: "STAIRS";
};
export type TrafficType = (typeof TrafficType)[keyof typeof TrafficType];
export interface TrafficPattern {
  TrafficType?: TrafficType;
  Phases?: Phase[];
  Stairs?: Stairs;
}
export interface RecommendationJobVpcConfig {
  SecurityGroupIds: string[] | undefined;
  Subnets: string[] | undefined;
}
export interface RecommendationJobInputConfig {
  ModelPackageVersionArn?: string;
  ModelName?: string;
  JobDurationInSeconds?: number;
  TrafficPattern?: TrafficPattern;
  ResourceLimit?: RecommendationJobResourceLimit;
  EndpointConfigurations?: EndpointInputConfiguration[];
  VolumeKmsKeyId?: string;
  ContainerConfig?: RecommendationJobContainerConfig;
  Endpoints?: EndpointInfo[];
  VpcConfig?: RecommendationJobVpcConfig;
}
export declare const RecommendationJobType: {
  readonly ADVANCED: "Advanced";
  readonly DEFAULT: "Default";
};
export type RecommendationJobType =
  (typeof RecommendationJobType)[keyof typeof RecommendationJobType];
export interface RecommendationJobCompiledOutputConfig {
  S3OutputUri?: string;
}
export interface RecommendationJobOutputConfig {
  KmsKeyId?: string;
  CompiledOutputConfig?: RecommendationJobCompiledOutputConfig;
}
export declare const FlatInvocations: {
  readonly CONTINUE: "Continue";
  readonly STOP: "Stop";
};
export type FlatInvocations =
  (typeof FlatInvocations)[keyof typeof FlatInvocations];
export interface ModelLatencyThreshold {
  Percentile?: string;
  ValueInMilliseconds?: number;
}
export interface RecommendationJobStoppingConditions {
  MaxInvocations?: number;
  ModelLatencyThresholds?: ModelLatencyThreshold[];
  FlatInvocations?: FlatInvocations;
}
export interface CreateInferenceRecommendationsJobRequest {
  JobName: string | undefined;
  JobType: RecommendationJobType | undefined;
  RoleArn: string | undefined;
  InputConfig: RecommendationJobInputConfig | undefined;
  JobDescription?: string;
  StoppingConditions?: RecommendationJobStoppingConditions;
  OutputConfig?: RecommendationJobOutputConfig;
  Tags?: Tag[];
}
export interface CreateInferenceRecommendationsJobResponse {
  JobArn: string | undefined;
}
export interface UiConfig {
  UiTemplateS3Uri?: string;
  HumanTaskUiArn?: string;
}
export interface HumanTaskConfig {
  WorkteamArn: string | undefined;
  UiConfig: UiConfig | undefined;
  PreHumanTaskLambdaArn: string | undefined;
  TaskKeywords?: string[];
  TaskTitle: string | undefined;
  TaskDescription: string | undefined;
  NumberOfHumanWorkersPerDataObject: number | undefined;
  TaskTimeLimitInSeconds: number | undefined;
  TaskAvailabilityLifetimeInSeconds?: number;
  MaxConcurrentTaskCount?: number;
  AnnotationConsolidationConfig: AnnotationConsolidationConfig | undefined;
  PublicWorkforceTaskPrice?: PublicWorkforceTaskPrice;
}
export interface LabelingJobDataAttributes {
  ContentClassifiers?: ContentClassifier[];
}
export interface LabelingJobS3DataSource {
  ManifestS3Uri: string | undefined;
}
export interface LabelingJobSnsDataSource {
  SnsTopicArn: string | undefined;
}
export interface LabelingJobDataSource {
  S3DataSource?: LabelingJobS3DataSource;
  SnsDataSource?: LabelingJobSnsDataSource;
}
export interface LabelingJobInputConfig {
  DataSource: LabelingJobDataSource | undefined;
  DataAttributes?: LabelingJobDataAttributes;
}
export interface LabelingJobResourceConfig {
  VolumeKmsKeyId?: string;
  VpcConfig?: VpcConfig;
}
export interface LabelingJobAlgorithmsConfig {
  LabelingJobAlgorithmSpecificationArn: string | undefined;
  InitialActiveLearningModelArn?: string;
  LabelingJobResourceConfig?: LabelingJobResourceConfig;
}
export interface LabelingJobOutputConfig {
  S3OutputPath: string | undefined;
  KmsKeyId?: string;
  SnsTopicArn?: string;
}
export interface LabelingJobStoppingConditions {
  MaxHumanLabeledObjectCount?: number;
  MaxPercentageOfInputDatasetLabeled?: number;
}
export interface CreateLabelingJobRequest {
  LabelingJobName: string | undefined;
  LabelAttributeName: string | undefined;
  InputConfig: LabelingJobInputConfig | undefined;
  OutputConfig: LabelingJobOutputConfig | undefined;
  RoleArn: string | undefined;
  LabelCategoryConfigS3Uri?: string;
  StoppingConditions?: LabelingJobStoppingConditions;
  LabelingJobAlgorithmsConfig?: LabelingJobAlgorithmsConfig;
  HumanTaskConfig: HumanTaskConfig | undefined;
  Tags?: Tag[];
}
export interface CreateLabelingJobResponse {
  LabelingJobArn: string | undefined;
}
export declare const TrackingServerSize: {
  readonly L: "Large";
  readonly M: "Medium";
  readonly S: "Small";
};
export type TrackingServerSize =
  (typeof TrackingServerSize)[keyof typeof TrackingServerSize];
export interface CreateMlflowTrackingServerRequest {
  TrackingServerName: string | undefined;
  ArtifactStoreUri: string | undefined;
  TrackingServerSize?: TrackingServerSize;
  MlflowVersion?: string;
  RoleArn: string | undefined;
  AutomaticModelRegistration?: boolean;
  WeeklyMaintenanceWindowStart?: string;
  Tags?: Tag[];
}
export interface CreateMlflowTrackingServerResponse {
  TrackingServerArn?: string;
}
export declare const InferenceExecutionMode: {
  readonly DIRECT: "Direct";
  readonly SERIAL: "Serial";
};
export type InferenceExecutionMode =
  (typeof InferenceExecutionMode)[keyof typeof InferenceExecutionMode];
export interface InferenceExecutionConfig {
  Mode: InferenceExecutionMode | undefined;
}
export interface CreateModelInput {
  ModelName: string | undefined;
  PrimaryContainer?: ContainerDefinition;
  Containers?: ContainerDefinition[];
  InferenceExecutionConfig?: InferenceExecutionConfig;
  ExecutionRoleArn?: string;
  Tags?: Tag[];
  VpcConfig?: VpcConfig;
  EnableNetworkIsolation?: boolean;
}
export interface CreateModelOutput {
  ModelArn: string | undefined;
}
export interface ModelBiasAppSpecification {
  ImageUri: string | undefined;
  ConfigUri: string | undefined;
  Environment?: Record<string, string>;
}
export interface ModelBiasBaselineConfig {
  BaseliningJobName?: string;
  ConstraintsResource?: MonitoringConstraintsResource;
}
export interface MonitoringGroundTruthS3Input {
  S3Uri?: string;
}
export interface ModelBiasJobInput {
  EndpointInput?: EndpointInput;
  BatchTransformInput?: BatchTransformInput;
  GroundTruthS3Input: MonitoringGroundTruthS3Input | undefined;
}
export interface CreateModelBiasJobDefinitionRequest {
  JobDefinitionName: string | undefined;
  ModelBiasBaselineConfig?: ModelBiasBaselineConfig;
  ModelBiasAppSpecification: ModelBiasAppSpecification | undefined;
  ModelBiasJobInput: ModelBiasJobInput | undefined;
  ModelBiasJobOutputConfig: MonitoringOutputConfig | undefined;
  JobResources: MonitoringResources | undefined;
  NetworkConfig?: MonitoringNetworkConfig;
  RoleArn: string | undefined;
  StoppingCondition?: MonitoringStoppingCondition;
  Tags?: Tag[];
}
export interface CreateModelBiasJobDefinitionResponse {
  JobDefinitionArn: string | undefined;
}
export declare const ModelCardStatus: {
  readonly APPROVED: "Approved";
  readonly ARCHIVED: "Archived";
  readonly DRAFT: "Draft";
  readonly PENDINGREVIEW: "PendingReview";
};
export type ModelCardStatus =
  (typeof ModelCardStatus)[keyof typeof ModelCardStatus];
export interface ModelCardSecurityConfig {
  KmsKeyId?: string;
}
export interface CreateModelCardRequest {
  ModelCardName: string | undefined;
  SecurityConfig?: ModelCardSecurityConfig;
  Content: string | undefined;
  ModelCardStatus: ModelCardStatus | undefined;
  Tags?: Tag[];
}
export interface CreateModelCardResponse {
  ModelCardArn: string | undefined;
}
export interface ModelCardExportOutputConfig {
  S3OutputPath: string | undefined;
}
export interface CreateModelCardExportJobRequest {
  ModelCardName: string | undefined;
  ModelCardVersion?: number;
  ModelCardExportJobName: string | undefined;
  OutputConfig: ModelCardExportOutputConfig | undefined;
}
export interface CreateModelCardExportJobResponse {
  ModelCardExportJobArn: string | undefined;
}
export interface ModelExplainabilityAppSpecification {
  ImageUri: string | undefined;
  ConfigUri: string | undefined;
  Environment?: Record<string, string>;
}
export interface ModelExplainabilityBaselineConfig {
  BaseliningJobName?: string;
  ConstraintsResource?: MonitoringConstraintsResource;
}
export interface ModelExplainabilityJobInput {
  EndpointInput?: EndpointInput;
  BatchTransformInput?: BatchTransformInput;
}
export interface CreateModelExplainabilityJobDefinitionRequest {
  JobDefinitionName: string | undefined;
  ModelExplainabilityBaselineConfig?: ModelExplainabilityBaselineConfig;
  ModelExplainabilityAppSpecification:
    | ModelExplainabilityAppSpecification
    | undefined;
  ModelExplainabilityJobInput: ModelExplainabilityJobInput | undefined;
  ModelExplainabilityJobOutputConfig: MonitoringOutputConfig | undefined;
  JobResources: MonitoringResources | undefined;
  NetworkConfig?: MonitoringNetworkConfig;
  RoleArn: string | undefined;
  StoppingCondition?: MonitoringStoppingCondition;
  Tags?: Tag[];
}
export interface CreateModelExplainabilityJobDefinitionResponse {
  JobDefinitionArn: string | undefined;
}
export interface FileSource {
  ContentType?: string;
  ContentDigest?: string;
  S3Uri: string | undefined;
}
export interface DriftCheckBias {
  ConfigFile?: FileSource;
  PreTrainingConstraints?: MetricsSource;
  PostTrainingConstraints?: MetricsSource;
}
export interface DriftCheckExplainability {
  Constraints?: MetricsSource;
  ConfigFile?: FileSource;
}
export interface DriftCheckModelDataQuality {
  Statistics?: MetricsSource;
  Constraints?: MetricsSource;
}
export interface DriftCheckModelQuality {
  Statistics?: MetricsSource;
  Constraints?: MetricsSource;
}
export interface DriftCheckBaselines {
  Bias?: DriftCheckBias;
  Explainability?: DriftCheckExplainability;
  ModelQuality?: DriftCheckModelQuality;
  ModelDataQuality?: DriftCheckModelDataQuality;
}
export interface ModelPackageModelCard {
  ModelCardContent?: string;
  ModelCardStatus?: ModelCardStatus;
}
export interface Explainability {
  Report?: MetricsSource;
}
export interface ModelDataQuality {
  Statistics?: MetricsSource;
  Constraints?: MetricsSource;
}
export interface ModelQuality {
  Statistics?: MetricsSource;
  Constraints?: MetricsSource;
}
export interface ModelMetrics {
  ModelQuality?: ModelQuality;
  ModelDataQuality?: ModelDataQuality;
  Bias?: Bias;
  Explainability?: Explainability;
}
export interface ModelPackageSecurityConfig {
  KmsKeyId: string | undefined;
}
export declare const SkipModelValidation: {
  readonly ALL: "All";
  readonly NONE: "None";
};
export type SkipModelValidation =
  (typeof SkipModelValidation)[keyof typeof SkipModelValidation];
export interface SourceAlgorithm {
  ModelDataUrl?: string;
  ModelDataSource?: ModelDataSource;
  AlgorithmName: string | undefined;
}
export interface SourceAlgorithmSpecification {
  SourceAlgorithms: SourceAlgorithm[] | undefined;
}
export interface ModelPackageValidationProfile {
  ProfileName: string | undefined;
  TransformJobDefinition: TransformJobDefinition | undefined;
}
export interface ModelPackageValidationSpecification {
  ValidationRole: string | undefined;
  ValidationProfiles: ModelPackageValidationProfile[] | undefined;
}
export interface CreateModelPackageInput {
  ModelPackageName?: string;
  ModelPackageGroupName?: string;
  ModelPackageDescription?: string;
  InferenceSpecification?: InferenceSpecification;
  ValidationSpecification?: ModelPackageValidationSpecification;
  SourceAlgorithmSpecification?: SourceAlgorithmSpecification;
  CertifyForMarketplace?: boolean;
  Tags?: Tag[];
  ModelApprovalStatus?: ModelApprovalStatus;
  MetadataProperties?: MetadataProperties;
  ModelMetrics?: ModelMetrics;
  ClientToken?: string;
  Domain?: string;
  Task?: string;
  SamplePayloadUrl?: string;
  CustomerMetadataProperties?: Record<string, string>;
  DriftCheckBaselines?: DriftCheckBaselines;
  AdditionalInferenceSpecifications?: AdditionalInferenceSpecificationDefinition[];
  SkipModelValidation?: SkipModelValidation;
  SourceUri?: string;
  SecurityConfig?: ModelPackageSecurityConfig;
  ModelCard?: ModelPackageModelCard;
}
export interface CreateModelPackageOutput {
  ModelPackageArn: string | undefined;
}
export interface CreateModelPackageGroupInput {
  ModelPackageGroupName: string | undefined;
  ModelPackageGroupDescription?: string;
  Tags?: Tag[];
}
export interface CreateModelPackageGroupOutput {
  ModelPackageGroupArn: string | undefined;
}
export declare const MonitoringProblemType: {
  readonly BINARY_CLASSIFICATION: "BinaryClassification";
  readonly MULTICLASS_CLASSIFICATION: "MulticlassClassification";
  readonly REGRESSION: "Regression";
};
export type MonitoringProblemType =
  (typeof MonitoringProblemType)[keyof typeof MonitoringProblemType];
export interface ModelQualityAppSpecification {
  ImageUri: string | undefined;
  ContainerEntrypoint?: string[];
  ContainerArguments?: string[];
  RecordPreprocessorSourceUri?: string;
  PostAnalyticsProcessorSourceUri?: string;
  ProblemType?: MonitoringProblemType;
  Environment?: Record<string, string>;
}
export interface ModelQualityBaselineConfig {
  BaseliningJobName?: string;
  ConstraintsResource?: MonitoringConstraintsResource;
}
export interface ModelQualityJobInput {
  EndpointInput?: EndpointInput;
  BatchTransformInput?: BatchTransformInput;
  GroundTruthS3Input: MonitoringGroundTruthS3Input | undefined;
}
export interface CreateModelQualityJobDefinitionRequest {
  JobDefinitionName: string | undefined;
  ModelQualityBaselineConfig?: ModelQualityBaselineConfig;
  ModelQualityAppSpecification: ModelQualityAppSpecification | undefined;
  ModelQualityJobInput: ModelQualityJobInput | undefined;
  ModelQualityJobOutputConfig: MonitoringOutputConfig | undefined;
  JobResources: MonitoringResources | undefined;
  NetworkConfig?: MonitoringNetworkConfig;
  RoleArn: string | undefined;
  StoppingCondition?: MonitoringStoppingCondition;
  Tags?: Tag[];
}
export interface CreateModelQualityJobDefinitionResponse {
  JobDefinitionArn: string | undefined;
}
export interface MonitoringBaselineConfig {
  BaseliningJobName?: string;
  ConstraintsResource?: MonitoringConstraintsResource;
  StatisticsResource?: MonitoringStatisticsResource;
}
export interface MonitoringAppSpecification {
  ImageUri: string | undefined;
  ContainerEntrypoint?: string[];
  ContainerArguments?: string[];
  RecordPreprocessorSourceUri?: string;
  PostAnalyticsProcessorSourceUri?: string;
}
export interface MonitoringInput {
  EndpointInput?: EndpointInput;
  BatchTransformInput?: BatchTransformInput;
}
export interface NetworkConfig {
  EnableInterContainerTrafficEncryption?: boolean;
  EnableNetworkIsolation?: boolean;
  VpcConfig?: VpcConfig;
}
export interface MonitoringJobDefinition {
  BaselineConfig?: MonitoringBaselineConfig;
  MonitoringInputs: MonitoringInput[] | undefined;
  MonitoringOutputConfig: MonitoringOutputConfig | undefined;
  MonitoringResources: MonitoringResources | undefined;
  MonitoringAppSpecification: MonitoringAppSpecification | undefined;
  StoppingCondition?: MonitoringStoppingCondition;
  Environment?: Record<string, string>;
  NetworkConfig?: NetworkConfig;
  RoleArn: string | undefined;
}
export declare const MonitoringType: {
  readonly DATA_QUALITY: "DataQuality";
  readonly MODEL_BIAS: "ModelBias";
  readonly MODEL_EXPLAINABILITY: "ModelExplainability";
  readonly MODEL_QUALITY: "ModelQuality";
};
export type MonitoringType =
  (typeof MonitoringType)[keyof typeof MonitoringType];
export interface ScheduleConfig {
  ScheduleExpression: string | undefined;
  DataAnalysisStartTime?: string;
  DataAnalysisEndTime?: string;
}
export interface MonitoringScheduleConfig {
  ScheduleConfig?: ScheduleConfig;
  MonitoringJobDefinition?: MonitoringJobDefinition;
  MonitoringJobDefinitionName?: string;
  MonitoringType?: MonitoringType;
}
export interface CreateMonitoringScheduleRequest {
  MonitoringScheduleName: string | undefined;
  MonitoringScheduleConfig: MonitoringScheduleConfig | undefined;
  Tags?: Tag[];
}
export interface CreateMonitoringScheduleResponse {
  MonitoringScheduleArn: string | undefined;
}
export declare const NotebookInstanceAcceleratorType: {
  readonly ML_EIA1_LARGE: "ml.eia1.large";
  readonly ML_EIA1_MEDIUM: "ml.eia1.medium";
  readonly ML_EIA1_XLARGE: "ml.eia1.xlarge";
  readonly ML_EIA2_LARGE: "ml.eia2.large";
  readonly ML_EIA2_MEDIUM: "ml.eia2.medium";
  readonly ML_EIA2_XLARGE: "ml.eia2.xlarge";
};
export type NotebookInstanceAcceleratorType =
  (typeof NotebookInstanceAcceleratorType)[keyof typeof NotebookInstanceAcceleratorType];
export declare const DirectInternetAccess: {
  readonly DISABLED: "Disabled";
  readonly ENABLED: "Enabled";
};
export type DirectInternetAccess =
  (typeof DirectInternetAccess)[keyof typeof DirectInternetAccess];
export interface InstanceMetadataServiceConfiguration {
  MinimumInstanceMetadataServiceVersion: string | undefined;
}
export declare const RootAccess: {
  readonly DISABLED: "Disabled";
  readonly ENABLED: "Enabled";
};
export type RootAccess = (typeof RootAccess)[keyof typeof RootAccess];
export interface CreateNotebookInstanceInput {
  NotebookInstanceName: string | undefined;
  InstanceType: _InstanceType | undefined;
  SubnetId?: string;
  SecurityGroupIds?: string[];
  RoleArn: string | undefined;
  KmsKeyId?: string;
  Tags?: Tag[];
  LifecycleConfigName?: string;
  DirectInternetAccess?: DirectInternetAccess;
  VolumeSizeInGB?: number;
  AcceleratorTypes?: NotebookInstanceAcceleratorType[];
  DefaultCodeRepository?: string;
  AdditionalCodeRepositories?: string[];
  RootAccess?: RootAccess;
  PlatformIdentifier?: string;
  InstanceMetadataServiceConfiguration?: InstanceMetadataServiceConfiguration;
}
export interface CreateNotebookInstanceOutput {
  NotebookInstanceArn?: string;
}
export interface NotebookInstanceLifecycleHook {
  Content?: string;
}
export interface CreateNotebookInstanceLifecycleConfigInput {
  NotebookInstanceLifecycleConfigName: string | undefined;
  OnCreate?: NotebookInstanceLifecycleHook[];
  OnStart?: NotebookInstanceLifecycleHook[];
}
export interface CreateNotebookInstanceLifecycleConfigOutput {
  NotebookInstanceLifecycleConfigArn?: string;
}
export declare const OptimizationJobDeploymentInstanceType: {
  readonly ML_G5_12XLARGE: "ml.g5.12xlarge";
  readonly ML_G5_16XLARGE: "ml.g5.16xlarge";
  readonly ML_G5_24XLARGE: "ml.g5.24xlarge";
  readonly ML_G5_2XLARGE: "ml.g5.2xlarge";
  readonly ML_G5_48XLARGE: "ml.g5.48xlarge";
  readonly ML_G5_4XLARGE: "ml.g5.4xlarge";
  readonly ML_G5_8XLARGE: "ml.g5.8xlarge";
  readonly ML_G5_XLARGE: "ml.g5.xlarge";
  readonly ML_G6_12XLARGE: "ml.g6.12xlarge";
  readonly ML_G6_16XLARGE: "ml.g6.16xlarge";
  readonly ML_G6_24XLARGE: "ml.g6.24xlarge";
  readonly ML_G6_2XLARGE: "ml.g6.2xlarge";
  readonly ML_G6_48XLARGE: "ml.g6.48xlarge";
  readonly ML_G6_4XLARGE: "ml.g6.4xlarge";
  readonly ML_G6_8XLARGE: "ml.g6.8xlarge";
  readonly ML_G6_XLARGE: "ml.g6.xlarge";
  readonly ML_INF2_24XLARGE: "ml.inf2.24xlarge";
  readonly ML_INF2_48XLARGE: "ml.inf2.48xlarge";
  readonly ML_INF2_8XLARGE: "ml.inf2.8xlarge";
  readonly ML_INF2_XLARGE: "ml.inf2.xlarge";
  readonly ML_P4DE_24XLARGE: "ml.p4de.24xlarge";
  readonly ML_P4D_24XLARGE: "ml.p4d.24xlarge";
  readonly ML_P5_48XLARGE: "ml.p5.48xlarge";
  readonly ML_TRN1N_32XLARGE: "ml.trn1n.32xlarge";
  readonly ML_TRN1_2XLARGE: "ml.trn1.2xlarge";
  readonly ML_TRN1_32XLARGE: "ml.trn1.32xlarge";
};
export type OptimizationJobDeploymentInstanceType =
  (typeof OptimizationJobDeploymentInstanceType)[keyof typeof OptimizationJobDeploymentInstanceType];
export interface OptimizationModelAccessConfig {
  AcceptEula: boolean | undefined;
}
export interface OptimizationJobModelSourceS3 {
  S3Uri?: string;
  ModelAccessConfig?: OptimizationModelAccessConfig;
}
export interface OptimizationJobModelSource {
  S3?: OptimizationJobModelSourceS3;
}
export interface ModelCompilationConfig {
  Image?: string;
  OverrideEnvironment?: Record<string, string>;
}
export interface ModelQuantizationConfig {
  Image?: string;
  OverrideEnvironment?: Record<string, string>;
}
export type OptimizationConfig =
  | OptimizationConfig.ModelCompilationConfigMember
  | OptimizationConfig.ModelQuantizationConfigMember
  | OptimizationConfig.$UnknownMember;
export declare namespace OptimizationConfig {
  interface ModelQuantizationConfigMember {
    ModelQuantizationConfig: ModelQuantizationConfig;
    ModelCompilationConfig?: never;
    $unknown?: never;
  }
  interface ModelCompilationConfigMember {
    ModelQuantizationConfig?: never;
    ModelCompilationConfig: ModelCompilationConfig;
    $unknown?: never;
  }
  interface $UnknownMember {
    ModelQuantizationConfig?: never;
    ModelCompilationConfig?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    ModelQuantizationConfig: (value: ModelQuantizationConfig) => T;
    ModelCompilationConfig: (value: ModelCompilationConfig) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: OptimizationConfig, visitor: Visitor<T>) => T;
}
export interface OptimizationJobOutputConfig {
  KmsKeyId?: string;
  S3OutputLocation: string | undefined;
}
export interface OptimizationVpcConfig {
  SecurityGroupIds: string[] | undefined;
  Subnets: string[] | undefined;
}
export interface CreateOptimizationJobRequest {
  OptimizationJobName: string | undefined;
  RoleArn: string | undefined;
  ModelSource: OptimizationJobModelSource | undefined;
  DeploymentInstanceType: OptimizationJobDeploymentInstanceType | undefined;
  OptimizationEnvironment?: Record<string, string>;
  OptimizationConfigs: OptimizationConfig[] | undefined;
  OutputConfig: OptimizationJobOutputConfig | undefined;
  StoppingCondition: StoppingCondition | undefined;
  Tags?: Tag[];
  VpcConfig?: OptimizationVpcConfig;
}
export interface CreateOptimizationJobResponse {
  OptimizationJobArn: string | undefined;
}
export interface ParallelismConfiguration {
  MaxParallelExecutionSteps: number | undefined;
}
export interface PipelineDefinitionS3Location {
  Bucket: string | undefined;
  ObjectKey: string | undefined;
  VersionId?: string;
}
export interface CreatePipelineRequest {
  PipelineName: string | undefined;
  PipelineDisplayName?: string;
  PipelineDefinition?: string;
  PipelineDefinitionS3Location?: PipelineDefinitionS3Location;
  PipelineDescription?: string;
  ClientRequestToken?: string;
  RoleArn: string | undefined;
  Tags?: Tag[];
  ParallelismConfiguration?: ParallelismConfiguration;
}
export interface CreatePipelineResponse {
  PipelineArn?: string;
}
export interface CreatePresignedDomainUrlRequest {
  DomainId: string | undefined;
  UserProfileName: string | undefined;
  SessionExpirationDurationInSeconds?: number;
  ExpiresInSeconds?: number;
  SpaceName?: string;
  LandingUri?: string;
}
export interface CreatePresignedDomainUrlResponse {
  AuthorizedUrl?: string;
}
export interface CreatePresignedMlflowTrackingServerUrlRequest {
  TrackingServerName: string | undefined;
  ExpiresInSeconds?: number;
  SessionExpirationDurationInSeconds?: number;
}
export interface CreatePresignedMlflowTrackingServerUrlResponse {
  AuthorizedUrl?: string;
}
export interface CreatePresignedNotebookInstanceUrlInput {
  NotebookInstanceName: string | undefined;
  SessionExpirationDurationInSeconds?: number;
}
export interface CreatePresignedNotebookInstanceUrlOutput {
  AuthorizedUrl?: string;
}
export interface ExperimentConfig {
  ExperimentName?: string;
  TrialName?: string;
  TrialComponentDisplayName?: string;
  RunName?: string;
}
export declare const DataDistributionType: {
  readonly FULLYREPLICATED: "FullyReplicated";
  readonly SHARDEDBYS3KEY: "ShardedByS3Key";
};
export type DataDistributionType =
  (typeof DataDistributionType)[keyof typeof DataDistributionType];
export declare const InputMode: {
  readonly FILE: "File";
  readonly PIPE: "Pipe";
};
export type InputMode = (typeof InputMode)[keyof typeof InputMode];
export declare const RedshiftResultCompressionType: {
  readonly BZIP2: "BZIP2";
  readonly GZIP: "GZIP";
  readonly NONE: "None";
  readonly SNAPPY: "SNAPPY";
  readonly ZSTD: "ZSTD";
};
export type RedshiftResultCompressionType =
  (typeof RedshiftResultCompressionType)[keyof typeof RedshiftResultCompressionType];
export declare const RedshiftResultFormat: {
  readonly CSV: "CSV";
  readonly PARQUET: "PARQUET";
};
export type RedshiftResultFormat =
  (typeof RedshiftResultFormat)[keyof typeof RedshiftResultFormat];
export declare const CreateModelCardRequestFilterSensitiveLog: (
  obj: CreateModelCardRequest
) => any;
export declare const ModelPackageModelCardFilterSensitiveLog: (
  obj: ModelPackageModelCard
) => any;
export declare const CreateModelPackageInputFilterSensitiveLog: (
  obj: CreateModelPackageInput
) => any;
